diff --git a/Makefile b/Makefile
index 976c89c..05e55eb 100755
--- a/Makefile
+++ b/Makefile
@@ -71,3 +71,4 @@ clean:
 	@rm -rf $(OBJECTS)  $(EXECUTABLE) *.o *.d Dict.cpp Dict.h $(LIBFRAMEWORK) latex html
 	@($(foreach MODULE, $(MODULES),$(MAKE) -C $(SRC_DIR)/$(MODULE) clean;))
 	$(MAKE) -C $(TEST_DIR) clean
+	cd $(SRC_DIR)/DBHandler; $(MAKE) clean;
diff --git a/framework/DBHandler/.cproject b/framework/DBHandler/.cproject
deleted file mode 100644
index 28f8115..0000000
--- a/framework/DBHandler/.cproject
+++ /dev/null
@@ -1,123 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<?fileVersion 4.0.0?>
-
-<cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
-	<storageModule moduleId="org.eclipse.cdt.core.settings">
-		<cconfiguration id="cdt.managedbuild.config.gnu.cross.exe.debug.1348740351">
-			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.cross.exe.debug.1348740351" moduleId="org.eclipse.cdt.core.settings" name="Debug">
-				<externalSettings/>
-				<extensions>
-					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
-					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
-					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
-					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
-					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
-					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
-				</extensions>
-			</storageModule>
-			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
-				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.cross.exe.debug.1348740351" name="Debug" parent="cdt.managedbuild.config.gnu.cross.exe.debug">
-					<folderInfo id="cdt.managedbuild.config.gnu.cross.exe.debug.1348740351." name="/" resourcePath="">
-						<toolChain id="cdt.managedbuild.toolchain.gnu.cross.exe.debug.1541851669" name="Cross GCC" superClass="cdt.managedbuild.toolchain.gnu.cross.exe.debug">
-							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="cdt.managedbuild.targetPlatform.gnu.cross.137811961" isAbstract="false" osList="all" superClass="cdt.managedbuild.targetPlatform.gnu.cross"/>
-							<builder buildPath="${workspace_loc:/DBHandler/Debug}" id="cdt.managedbuild.builder.gnu.cross.988814150" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="cdt.managedbuild.builder.gnu.cross"/>
-							<tool id="cdt.managedbuild.tool.gnu.cross.c.compiler.2037048520" name="Cross GCC Compiler" superClass="cdt.managedbuild.tool.gnu.cross.c.compiler">
-								<option defaultValue="gnu.c.optimization.level.none" id="gnu.c.compiler.option.optimization.level.1050191071" name="Optimization Level" superClass="gnu.c.compiler.option.optimization.level" valueType="enumerated"/>
-								<option id="gnu.c.compiler.option.debugging.level.2055255411" name="Debug Level" superClass="gnu.c.compiler.option.debugging.level" value="gnu.c.debugging.level.max" valueType="enumerated"/>
-								<option id="gnu.c.compiler.option.misc.other.1070238733" name="Other flags" superClass="gnu.c.compiler.option.misc.other" value="-c -fmessage-length=0 -std=c++0x" valueType="string"/>
-								<inputType id="cdt.managedbuild.tool.gnu.c.compiler.input.761644264" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
-							</tool>
-							<tool id="cdt.managedbuild.tool.gnu.cross.cpp.compiler.1467433644" name="Cross G++ Compiler" superClass="cdt.managedbuild.tool.gnu.cross.cpp.compiler">
-								<option id="gnu.cpp.compiler.option.optimization.level.1328394594" name="Optimization Level" superClass="gnu.cpp.compiler.option.optimization.level" value="gnu.cpp.compiler.optimization.level.none" valueType="enumerated"/>
-								<option id="gnu.cpp.compiler.option.debugging.level.1840021005" name="Debug Level" superClass="gnu.cpp.compiler.option.debugging.level" value="gnu.cpp.compiler.debugging.level.max" valueType="enumerated"/>
-								<option id="gnu.cpp.compiler.option.other.other.1373538824" name="Other flags" superClass="gnu.cpp.compiler.option.other.other" value="-c -fmessage-length=0 -std=c++0x" valueType="string"/>
-								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.1693798166" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
-							</tool>
-							<tool id="cdt.managedbuild.tool.gnu.cross.c.linker.66160388" name="Cross GCC Linker" superClass="cdt.managedbuild.tool.gnu.cross.c.linker"/>
-							<tool id="cdt.managedbuild.tool.gnu.cross.cpp.linker.1732646748" name="Cross G++ Linker" superClass="cdt.managedbuild.tool.gnu.cross.cpp.linker">
-								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.1940928875" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
-									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
-									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
-								</inputType>
-							</tool>
-							<tool id="cdt.managedbuild.tool.gnu.cross.archiver.1164692894" name="Cross GCC Archiver" superClass="cdt.managedbuild.tool.gnu.cross.archiver"/>
-							<tool id="cdt.managedbuild.tool.gnu.cross.assembler.488977744" name="Cross GCC Assembler" superClass="cdt.managedbuild.tool.gnu.cross.assembler">
-								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.959832738" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
-							</tool>
-						</toolChain>
-					</folderInfo>
-				</configuration>
-			</storageModule>
-			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
-		</cconfiguration>
-		<cconfiguration id="cdt.managedbuild.config.gnu.cross.exe.release.990259018">
-			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.cross.exe.release.990259018" moduleId="org.eclipse.cdt.core.settings" name="Release">
-				<externalSettings/>
-				<extensions>
-					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
-					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
-					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
-					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
-					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
-					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
-				</extensions>
-			</storageModule>
-			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
-				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.cross.exe.release.990259018" name="Release" parent="cdt.managedbuild.config.gnu.cross.exe.release">
-					<folderInfo id="cdt.managedbuild.config.gnu.cross.exe.release.990259018." name="/" resourcePath="">
-						<toolChain id="cdt.managedbuild.toolchain.gnu.cross.exe.release.7759900" name="Cross GCC" superClass="cdt.managedbuild.toolchain.gnu.cross.exe.release">
-							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="cdt.managedbuild.targetPlatform.gnu.cross.387535489" isAbstract="false" osList="all" superClass="cdt.managedbuild.targetPlatform.gnu.cross"/>
-							<builder buildPath="${workspace_loc:/DBHandler/Release}" id="cdt.managedbuild.builder.gnu.cross.276231442" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="cdt.managedbuild.builder.gnu.cross"/>
-							<tool id="cdt.managedbuild.tool.gnu.cross.c.compiler.1956177163" name="Cross GCC Compiler" superClass="cdt.managedbuild.tool.gnu.cross.c.compiler">
-								<option defaultValue="gnu.c.optimization.level.most" id="gnu.c.compiler.option.optimization.level.1783400791" name="Optimization Level" superClass="gnu.c.compiler.option.optimization.level" valueType="enumerated"/>
-								<option id="gnu.c.compiler.option.debugging.level.2088349118" name="Debug Level" superClass="gnu.c.compiler.option.debugging.level" value="gnu.c.debugging.level.none" valueType="enumerated"/>
-								<option id="gnu.c.compiler.option.misc.other.1432460568" name="Other flags" superClass="gnu.c.compiler.option.misc.other" value="-c -fmessage-length=0 -std=c++0x" valueType="string"/>
-								<inputType id="cdt.managedbuild.tool.gnu.c.compiler.input.268922801" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
-							</tool>
-							<tool id="cdt.managedbuild.tool.gnu.cross.cpp.compiler.1855446466" name="Cross G++ Compiler" superClass="cdt.managedbuild.tool.gnu.cross.cpp.compiler">
-								<option id="gnu.cpp.compiler.option.optimization.level.610203686" name="Optimization Level" superClass="gnu.cpp.compiler.option.optimization.level" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
-								<option id="gnu.cpp.compiler.option.debugging.level.2131514800" name="Debug Level" superClass="gnu.cpp.compiler.option.debugging.level" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
-								<option id="gnu.cpp.compiler.option.other.other.1558211099" name="Other flags" superClass="gnu.cpp.compiler.option.other.other" value="-c -fmessage-length=0 -std=c++0x" valueType="string"/>
-								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.1430423760" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
-							</tool>
-							<tool id="cdt.managedbuild.tool.gnu.cross.c.linker.166456388" name="Cross GCC Linker" superClass="cdt.managedbuild.tool.gnu.cross.c.linker"/>
-							<tool id="cdt.managedbuild.tool.gnu.cross.cpp.linker.252481354" name="Cross G++ Linker" superClass="cdt.managedbuild.tool.gnu.cross.cpp.linker">
-								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.2114101036" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
-									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
-									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
-								</inputType>
-							</tool>
-							<tool id="cdt.managedbuild.tool.gnu.cross.archiver.1177138579" name="Cross GCC Archiver" superClass="cdt.managedbuild.tool.gnu.cross.archiver"/>
-							<tool id="cdt.managedbuild.tool.gnu.cross.assembler.1655834563" name="Cross GCC Assembler" superClass="cdt.managedbuild.tool.gnu.cross.assembler">
-								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1209560699" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
-							</tool>
-						</toolChain>
-					</folderInfo>
-				</configuration>
-			</storageModule>
-			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
-		</cconfiguration>
-	</storageModule>
-	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
-		<project id="DBHandler.cdt.managedbuild.target.gnu.cross.exe.1945416163" name="Executable" projectType="cdt.managedbuild.target.gnu.cross.exe"/>
-	</storageModule>
-	<storageModule moduleId="scannerConfiguration">
-		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
-		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.cross.exe.debug.1348740351;cdt.managedbuild.config.gnu.cross.exe.debug.1348740351.;cdt.managedbuild.tool.gnu.cross.c.compiler.2037048520;cdt.managedbuild.tool.gnu.c.compiler.input.761644264">
-			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC"/>
-		</scannerConfigBuildInfo>
-		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.cross.exe.release.990259018;cdt.managedbuild.config.gnu.cross.exe.release.990259018.;cdt.managedbuild.tool.gnu.cross.c.compiler.1956177163;cdt.managedbuild.tool.gnu.c.compiler.input.268922801">
-			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC"/>
-		</scannerConfigBuildInfo>
-		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.cross.exe.release.990259018;cdt.managedbuild.config.gnu.cross.exe.release.990259018.;cdt.managedbuild.tool.gnu.cross.cpp.compiler.1855446466;cdt.managedbuild.tool.gnu.cpp.compiler.input.1430423760">
-			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP"/>
-		</scannerConfigBuildInfo>
-		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.cross.exe.debug.1348740351;cdt.managedbuild.config.gnu.cross.exe.debug.1348740351.;cdt.managedbuild.tool.gnu.cross.cpp.compiler.1467433644;cdt.managedbuild.tool.gnu.cpp.compiler.input.1693798166">
-			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP"/>
-		</scannerConfigBuildInfo>
-	</storageModule>
-	<storageModule moduleId="refreshScope" versionNumber="1">
-		<resource resourceType="PROJECT" workspacePath="/DBHandler"/>
-	</storageModule>
-	<storageModule moduleId="org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings"/>
-</cproject>
diff --git a/framework/DBHandler/.project b/framework/DBHandler/.project
deleted file mode 100644
index 4e5a755..0000000
--- a/framework/DBHandler/.project
+++ /dev/null
@@ -1,83 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>DBHandler</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.cdt.managedbuilder.core.genmakebuilder</name>
-			<triggers>clean,full,incremental,</triggers>
-			<arguments>
-				<dictionary>
-					<key>?name?</key>
-					<value></value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.append_environment</key>
-					<value>true</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.autoBuildTarget</key>
-					<value>all</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.buildArguments</key>
-					<value></value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.buildCommand</key>
-					<value>make</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.buildLocation</key>
-					<value>${workspace_loc:/DBHandler/Debug}</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.cleanBuildTarget</key>
-					<value>clean</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.contents</key>
-					<value>org.eclipse.cdt.make.core.activeConfigSettings</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.enableAutoBuild</key>
-					<value>false</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.enableCleanBuild</key>
-					<value>true</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.enableFullBuild</key>
-					<value>true</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.fullBuildTarget</key>
-					<value>all</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.stopOnError</key>
-					<value>true</value>
-				</dictionary>
-				<dictionary>
-					<key>org.eclipse.cdt.make.core.useDefaultBuildCmd</key>
-					<value>true</value>
-				</dictionary>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder</name>
-			<triggers>full,incremental,</triggers>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.cdt.core.cnature</nature>
-		<nature>org.eclipse.cdt.core.ccnature</nature>
-		<nature>org.eclipse.cdt.managedbuilder.core.managedBuildNature</nature>
-		<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>
-	</natures>
-</projectDescription>
diff --git a/framework/DBHandler/.settings/org.eclipse.cdt.codan.core.prefs b/framework/DBHandler/.settings/org.eclipse.cdt.codan.core.prefs
deleted file mode 100644
index 0710d38..0000000
--- a/framework/DBHandler/.settings/org.eclipse.cdt.codan.core.prefs
+++ /dev/null
@@ -1,65 +0,0 @@
-eclipse.preferences.version=1
-org.eclipse.cdt.codan.checkers.errnoreturn=Warning
-org.eclipse.cdt.codan.checkers.errnoreturn.params={implicit\=>false}
-org.eclipse.cdt.codan.checkers.errreturnvalue=Error
-org.eclipse.cdt.codan.checkers.errreturnvalue.params={}
-org.eclipse.cdt.codan.checkers.noreturn=Error
-org.eclipse.cdt.codan.checkers.noreturn.params={implicit\=>false}
-org.eclipse.cdt.codan.internal.checkers.AbstractClassCreation=Error
-org.eclipse.cdt.codan.internal.checkers.AbstractClassCreation.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.AmbiguousProblem=Error
-org.eclipse.cdt.codan.internal.checkers.AmbiguousProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.AssignmentInConditionProblem=Warning
-org.eclipse.cdt.codan.internal.checkers.AssignmentInConditionProblem.params={}
-org.eclipse.cdt.codan.internal.checkers.AssignmentToItselfProblem=Error
-org.eclipse.cdt.codan.internal.checkers.AssignmentToItselfProblem.params={}
-org.eclipse.cdt.codan.internal.checkers.CaseBreakProblem=Warning
-org.eclipse.cdt.codan.internal.checkers.CaseBreakProblem.params={no_break_comment\=>"no break",last_case_param\=>true,empty_case_param\=>false}
-org.eclipse.cdt.codan.internal.checkers.CatchByReference=Warning
-org.eclipse.cdt.codan.internal.checkers.CatchByReference.params={unknown\=>false,exceptions\=>()}
-org.eclipse.cdt.codan.internal.checkers.CircularReferenceProblem=Error
-org.eclipse.cdt.codan.internal.checkers.CircularReferenceProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.FieldResolutionProblem=Error
-org.eclipse.cdt.codan.internal.checkers.FieldResolutionProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.FunctionResolutionProblem=Error
-org.eclipse.cdt.codan.internal.checkers.FunctionResolutionProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.InvalidArguments=Error
-org.eclipse.cdt.codan.internal.checkers.InvalidArguments.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.InvalidTemplateArgumentsProblem=Error
-org.eclipse.cdt.codan.internal.checkers.InvalidTemplateArgumentsProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.LabelStatementNotFoundProblem=Error
-org.eclipse.cdt.codan.internal.checkers.LabelStatementNotFoundProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.MemberDeclarationNotFoundProblem=Error
-org.eclipse.cdt.codan.internal.checkers.MemberDeclarationNotFoundProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.MethodResolutionProblem=Error
-org.eclipse.cdt.codan.internal.checkers.MethodResolutionProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.NamingConventionFunctionChecker=-Info
-org.eclipse.cdt.codan.internal.checkers.NamingConventionFunctionChecker.params={pattern\=>"^[a-z]",macro\=>true,exceptions\=>()}
-org.eclipse.cdt.codan.internal.checkers.NonVirtualDestructorProblem=Warning
-org.eclipse.cdt.codan.internal.checkers.NonVirtualDestructorProblem.params={}
-org.eclipse.cdt.codan.internal.checkers.OverloadProblem=Error
-org.eclipse.cdt.codan.internal.checkers.OverloadProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.RedeclarationProblem=Error
-org.eclipse.cdt.codan.internal.checkers.RedeclarationProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.RedefinitionProblem=Error
-org.eclipse.cdt.codan.internal.checkers.RedefinitionProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.ReturnStyleProblem=-Warning
-org.eclipse.cdt.codan.internal.checkers.ReturnStyleProblem.params={}
-org.eclipse.cdt.codan.internal.checkers.ScanfFormatStringSecurityProblem=-Warning
-org.eclipse.cdt.codan.internal.checkers.ScanfFormatStringSecurityProblem.params={}
-org.eclipse.cdt.codan.internal.checkers.StatementHasNoEffectProblem=Warning
-org.eclipse.cdt.codan.internal.checkers.StatementHasNoEffectProblem.params={macro\=>true,exceptions\=>()}
-org.eclipse.cdt.codan.internal.checkers.SuggestedParenthesisProblem=Warning
-org.eclipse.cdt.codan.internal.checkers.SuggestedParenthesisProblem.params={paramNot\=>false}
-org.eclipse.cdt.codan.internal.checkers.SuspiciousSemicolonProblem=Warning
-org.eclipse.cdt.codan.internal.checkers.SuspiciousSemicolonProblem.params={else\=>false,afterelse\=>false}
-org.eclipse.cdt.codan.internal.checkers.TypeResolutionProblem=Error
-org.eclipse.cdt.codan.internal.checkers.TypeResolutionProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
-org.eclipse.cdt.codan.internal.checkers.UnusedFunctionDeclarationProblem=Warning
-org.eclipse.cdt.codan.internal.checkers.UnusedFunctionDeclarationProblem.params={macro\=>true}
-org.eclipse.cdt.codan.internal.checkers.UnusedStaticFunctionProblem=Warning
-org.eclipse.cdt.codan.internal.checkers.UnusedStaticFunctionProblem.params={macro\=>true}
-org.eclipse.cdt.codan.internal.checkers.UnusedVariableDeclarationProblem=Warning
-org.eclipse.cdt.codan.internal.checkers.UnusedVariableDeclarationProblem.params={macro\=>true,exceptions\=>("@(\#)","$Id")}
-org.eclipse.cdt.codan.internal.checkers.VariableResolutionProblem=Error
-org.eclipse.cdt.codan.internal.checkers.VariableResolutionProblem.params={launchModes\=>{RUN_ON_FULL_BUILD\=>false,RUN_ON_INC_BUILD\=>false,RUN_AS_YOU_TYPE\=>true,RUN_ON_DEMAND\=>true}}
diff --git a/framework/DBHandler/Makefile b/framework/DBHandler/Makefile
index 7bf5961..cc98477 100644
--- a/framework/DBHandler/Makefile
+++ b/framework/DBHandler/Makefile
@@ -27,4 +27,5 @@ start:
 #documentation:
 #	doxygen Doxyfile
 clean:
-	rm -f *~ $(OBJECTS) $(EXEC) $(PHOTOMULTIPLIER_MAP_FILE) 
+	rm -f *~ $(OBJECTS) $(EXEC) $(PHOTOMULTIPLIER_MAP_FILE)
+
diff --git a/framework/JPetCmdParser/JPetCmdParser.cpp b/framework/JPetCmdParser/JPetCmdParser.cpp
index 62cd03d..27d4c71 100644
--- a/framework/JPetCmdParser/JPetCmdParser.cpp
+++ b/framework/JPetCmdParser/JPetCmdParser.cpp
@@ -21,6 +21,7 @@ JPetCmdParser::JPetCmdParser()
   ("file,f", po::value<string>()->required(), "File to open")
   ("range,r", po::value< vector<int> >()->multitoken()->default_value(tmp, ""), "Range of events to process.")
   ("param,p", po::value<string>(), "File with TRB numbers.")
+  ("runId,i", po::value<int>(), "Run id.")
   ;
 }
 
@@ -70,6 +71,12 @@ void JPetCmdParser::parse(int argc, const char** argv)
       cerr << "Possible options: hld or root" << endl;
       exit(-1);
     }
+    
+    if(fVariablesMap["runId"].as<int>() <= 0)
+    {
+      cerr << "Wrong number of run id: " << fVariablesMap["runId"].as<int>() << endl;
+      exit(-1);
+    }
 
   } catch (exception& e) {
     cerr << "error: " << e.what() << "\n";
diff --git a/framework/JPetCmdParser/JPetCmdParser.h b/framework/JPetCmdParser/JPetCmdParser.h
index 63fc2d9..b0d7383 100644
--- a/framework/JPetCmdParser/JPetCmdParser.h
+++ b/framework/JPetCmdParser/JPetCmdParser.h
@@ -34,6 +34,9 @@ public:
     inline bool paramIsSet() const { return (bool)fVariablesMap.count("param"); }
     inline const std::string& getParam() const {return fVariablesMap["param"].as< std::string >(); }
     
+    inline bool isRunNumberSet() const { return (bool)fVariablesMap.count("runId"); }
+    inline const int getRunNumber() const { return fVariablesMap["runId"].as<int>();}
+    
 private:
 	po::options_description fOptDescriptions;
 	po::variables_map fVariablesMap;
diff --git a/framework/JPetKB/JPetKB.cpp b/framework/JPetKB/JPetKB.cpp
index 62535d6..b43bf31 100644
--- a/framework/JPetKB/JPetKB.cpp
+++ b/framework/JPetKB/JPetKB.cpp
@@ -29,13 +29,13 @@ JPetKB::JPetKB(int p_id,
 	       std::string p_status, 
 	       std::string p_description, 
 	       int p_version, 
-	       JPetUser &p_JPetUser) :
-				      m_id(p_id),
-				      m_isActive(p_isActive),
-				      m_status(p_status),
-				      m_description(p_description),
-				      m_version(p_version),
-				      m_JPetUser(p_JPetUser) 
+	       int p_userId) :
+			      m_id(p_id),
+			      m_isActive(p_isActive),
+			      m_status(p_status),
+			      m_description(p_description),
+			      m_version(p_version),
+			      m_userId(p_userId)
 {
 }
 
@@ -67,3 +67,8 @@ int JPetKB::version() const
 {
   return m_version;
 }
+
+int JPetKB::userId() const
+{
+  return m_userId;
+}
diff --git a/framework/JPetKB/JPetKB.h b/framework/JPetKB/JPetKB.h
index 7de8912..f7980e9 100644
--- a/framework/JPetKB/JPetKB.h
+++ b/framework/JPetKB/JPetKB.h
@@ -3,7 +3,7 @@
 #define JPET_KB_H
 
 #include "TNamed.h"
-#include "../JPetUser/JPetUser.h"
+//#include "../JPetUser/JPetUser.h"
 
 
 class JPetKB: public TNamed
@@ -41,10 +41,11 @@ protected:
   std::string m_status;
   std::string m_description;
   int m_version;
-  JPetUser &m_JPetUser;		//creatorId
+  //JPetUser &m_JPetUser;		// creatorId
+  int m_userId;		// creatorId
 
 public:
-  JPetKB(int p_id, bool p_isActive, std::string p_status, std::string p_description, int p_version, JPetUser &p_JPetUser);
+  JPetKB(int p_id, bool p_isActive, std::string p_status, std::string p_description, int p_version, int p_userId);
   virtual ~JPetKB(void);
   
   virtual int id(void) const;
@@ -52,6 +53,7 @@ public:
   virtual std::string status(void) const;
   virtual std::string description(void) const;
   virtual int version(void) const;
+  virtual int userId(void) const;
   
 private:
   ClassDef(JPetKB, 1);
diff --git a/framework/JPetManager/JPetManager.cpp b/framework/JPetManager/JPetManager.cpp
index 6e46878..6cabf50 100644
--- a/framework/JPetManager/JPetManager.cpp
+++ b/framework/JPetManager/JPetManager.cpp
@@ -50,6 +50,7 @@ void JPetManager::Run()
 }
 
 void JPetManager::ParseCmdLine(int argc, char** argv){
+
     fCmdParser.parse(argc, (const char **)argv);
     if (fCmdParser.paramIsSet()){
         fParamManager.readFile(fCmdParser.getParam().c_str());
@@ -61,6 +62,14 @@ void JPetManager::ParseCmdLine(int argc, char** argv){
         fUnpacker.setParams(fCmdParser.getFileName().c_str());
       }
     }
+    
+    if(fCmdParser.isRunNumberSet())
+    {
+      std::cout << "fParamManager.getDataSize() = " << fParamManager.getDataSize() << std::endl;
+      std::cout << "fCmdParser.isRunNumberSet()" << std::endl;
+      fParamManager.fillKBsData(fCmdParser.getRunNumber());
+      std::cout << "fParamManager.getKBsDataSize() = " << fParamManager.getKBsDataSize() << std::endl;
+    }
 }
 
 JPetManager::~JPetManager()
diff --git a/framework/JPetParamManager/JPetParamManager.cpp b/framework/JPetParamManager/JPetParamManager.cpp
index 8d27a1c..74f8ac4 100644
--- a/framework/JPetParamManager/JPetParamManager.cpp
+++ b/framework/JPetParamManager/JPetParamManager.cpp
@@ -1,4 +1,10 @@
 #include "JPetParamManager.h"
+//#include "../DBHandler/HeaderFiles/ParamServer.h"
+#include "../DBHandler/HeaderFiles/DBHandler.h"
+#include <boost/shared_ptr.hpp>
+#include <boost/lexical_cast.hpp>
+#include "../JPetKB/JPetKB.h"
+
 
 using namespace std;
 
@@ -25,3 +31,38 @@ void JPetParamManager::readFile(const char * file_name){
 		fScinNumbers.push_back(scin);
 	}
 }
+
+void JPetParamManager::fillKBsData(int p_run_id)
+{
+  DB::SERVICES::DBHandler &l_dbHandlerInstance = DB::SERVICES::DBHandler::getInstance();
+  
+  std::string l_run_id = boost::lexical_cast<std::string>(p_run_id);
+  std::string l_sqlQuerry = "SELECT * FROM getKonradBoardsData(" + l_run_id + ");";
+  pqxx::result l_runDbResults = l_dbHandlerInstance.querry(l_sqlQuerry);
+
+  size_t l_sizeResultQuerry = l_runDbResults.size();
+
+  if(l_sizeResultQuerry)
+  {
+    for(pqxx::result::const_iterator row = l_runDbResults.begin(); row != l_runDbResults.end(); ++row)
+    {
+      int l_konradboard_id = row["konradboard_id"].as<int>();
+      bool l_konradboard_isactive = row["konradboard_isactive"].as<bool>();
+      std::string l_konradboard_status = row["konradboard_status"].as<std::string>();
+      std::string l_konradboard_description = row["konradboard_description"].as<std::string>();
+      int l_konradboard_version = row["konradboard_version"].as<int>();
+      int l_konradboard_creator_id = row["konradboard_creator_id"].as<int>();
+
+      JPetKB l_KB(
+		  l_konradboard_id, 
+		  l_konradboard_isactive, 
+		  l_konradboard_status, 
+		  l_konradboard_description, 
+		  l_konradboard_version, 
+		  l_konradboard_creator_id
+		 );
+      
+      m_KBsData.push_back(l_KB);
+    }
+  }
+}
diff --git a/framework/JPetParamManager/JPetParamManager.h b/framework/JPetParamManager/JPetParamManager.h
index c7db266..a658fa6 100644
--- a/framework/JPetParamManager/JPetParamManager.h
+++ b/framework/JPetParamManager/JPetParamManager.h
@@ -7,17 +7,23 @@
 #include <string>
 #include <sstream>
 #include "../../JPetLoggerInclude.h"
+#include "../JPetKB/JPetKB.h"
 
 
-class JPetParamManager {
+class JPetParamManager
+{
 public:
 	void readFile(const char* file_name);
 	int getTRBNumber(int i) const { return fTRBNumbers[i]; }
 	int getScinNumber(int i) const { return fScinNumbers[i]; }
 	int getDataSize() const { assert(fTRBNumbers.size() == fScinNumbers.size()); return fTRBNumbers.size() ;}
+	
+	void fillKBsData(int p_run_id);
+	int getKBsDataSize() const {m_KBsData.size();};
 private:
         std::vector<int> fTRBNumbers;
         std::vector<int> fScinNumbers;
+	std::vector<JPetKB> m_KBsData;
 };
 
 #endif
diff --git a/framework/JPetParamManager/Makefile b/framework/JPetParamManager/Makefile
index 1fb816b..5e2e1db 100644
--- a/framework/JPetParamManager/Makefile
+++ b/framework/JPetParamManager/Makefile
@@ -2,6 +2,7 @@ CC            =  g++
 LD            =  g++
 COPTS         =  `root-config --cflags` -fPIC
 LDOPTS        =  `root-config --glibs` -g
+CFLAGS        =  -std=c++0x
 #C++ Files
 SOURCES       =  JPetParamManager.cpp
 OBJECTS       =  $(SOURCES:.cpp=.o)
@@ -10,7 +11,7 @@ OBJECTS      +=  $(SOURCES:.cpp=Dict.o)
 HEADERS       =  $(SOURCES:.cpp=.h) 
 
 %.o: %.cpp
-	$(CC) $^ -o $@  -c $(COPTS)
+	$(CC) $^ -o $@  -c $(COPTS) $(CFLAGS)
 all: $(DICT_OBJECTS) $(OBJECTS)
 %Dict.cpp:
 	@echo "Generating dictionary ..."
diff --git a/workdir/example2/Makefile b/workdir/example2/Makefile
index a263d80..2d75434 100644
--- a/workdir/example2/Makefile
+++ b/workdir/example2/Makefile
@@ -3,14 +3,30 @@ CC = g++
 LD = $(CC) 
 DEBUG_FLAG = -g
 #######################
-COPTS = -Wall `root-config --cflags` 
-LDOPTS = -Wall `root-config --glibs` $(DEBUG_FLAG) -lboost_program_options
+COPTS = -Wall `root-config --cflags` -std=c++0x 
+LDOPTS = -Wall `root-config --glibs` $(DEBUG_FLAG) -lboost_program_options -std=c++0x
 #######################
 SRC_MODULE = JPetAnalysisModuleA.cpp
 HDR_MODULE = $(SRC_MODULE:.cpp=.h)
 OBJ_MODULE = $(SRC_MODULE:.cpp=.o)
 SRC_MAIN = main.cpp
 OBJ_MAIN = $(SRC_MAIN:.cpp=.o)
+
+###################
+HDR_DIR = ../../framework/DBHandler/HeaderFiles
+SRC_DIR = ../../framework/DBHandler/SourceFiles
+CPP_FILES= Functions RunData DBHandler PhotoMultiplierMap RunDataMap TRBThresholdMap PhotoMultiplierIdMap TOMBInputMap PassedInformationMap ParamServer ParamData
+CPP_MODULES=$(foreach dir, $(CPP_FILES), $(SRC_DIR)/$(dir).cpp)
+OBJECTS_DB=$(foreach dir, $(CPP_FILES), $(SRC_DIR)/$(dir).o)
+
+#CFLAGS= -I/usr/local/include/
+LD_CONF= -lconfig++
+LD_PQ = -lpqxx -lpq
+LDOPTS += $(LD_CONF)
+LDOPTS += $(LD_PQ)
+
+###################
+
 #######################
 EXECUTABLE = $(SRC_MAIN:.cpp=.x)
 LOG = JPet.log
@@ -20,7 +36,7 @@ HDR_DICT = $(SRC_DICT:.cpp=.h)
 OBJ_DICT = $(SRC_DICT:.cpp=.o)
 #######################
 SOURCES = $(SRC_MAIN) $(SRC_MODULE) $(SRC_DICT) 
-OBJECTS = $(OBJ_MAIN) $(OBJ_MODULE) $(OBJ_DICT)
+OBJECTS = $(OBJ_MAIN) $(OBJ_MODULE) $(OBJ_DICT) $(OBJECTS_DB)
 SHAREDLIB_DIR = ../..
 SHAREDLIBS = $(SHAREDLIB_DIR)/libJPetFramework.so
 ifeq ($(OS), Darwin)
