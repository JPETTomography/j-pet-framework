//
// File generated by rootcint at Thu Mar 20 13:13:02 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME mydict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "mydict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TDCHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TDCHit(void *p = 0);
   static void *newArray_TDCHit(Long_t size, void *p);
   static void delete_TDCHit(void *p);
   static void deleteArray_TDCHit(void *p);
   static void destruct_TDCHit(void *p);
   static void streamer_TDCHit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDCHit*)
   {
      ::TDCHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDCHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDCHit", ::TDCHit::Class_Version(), "./TDCHit.h", 8,
                  typeid(::TDCHit), DefineBehavior(ptr, ptr),
                  &::TDCHit::Dictionary, isa_proxy, 0,
                  sizeof(::TDCHit) );
      instance.SetNew(&new_TDCHit);
      instance.SetNewArray(&newArray_TDCHit);
      instance.SetDelete(&delete_TDCHit);
      instance.SetDeleteArray(&deleteArray_TDCHit);
      instance.SetDestructor(&destruct_TDCHit);
      instance.SetStreamerFunc(&streamer_TDCHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDCHit*)
   {
      return GenerateInitInstanceLocal((::TDCHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDCHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ADCHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ADCHit(void *p = 0);
   static void *newArray_ADCHit(Long_t size, void *p);
   static void delete_ADCHit(void *p);
   static void deleteArray_ADCHit(void *p);
   static void destruct_ADCHit(void *p);
   static void streamer_ADCHit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ADCHit*)
   {
      ::ADCHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ADCHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ADCHit", ::ADCHit::Class_Version(), "./ADCHit.h", 8,
                  typeid(::ADCHit), DefineBehavior(ptr, ptr),
                  &::ADCHit::Dictionary, isa_proxy, 0,
                  sizeof(::ADCHit) );
      instance.SetNew(&new_ADCHit);
      instance.SetNewArray(&newArray_ADCHit);
      instance.SetDelete(&delete_ADCHit);
      instance.SetDeleteArray(&deleteArray_ADCHit);
      instance.SetDestructor(&destruct_ADCHit);
      instance.SetStreamerFunc(&streamer_ADCHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ADCHit*)
   {
      return GenerateInitInstanceLocal((::ADCHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ADCHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Event(void *p = 0);
   static void *newArray_Event(Long_t size, void *p);
   static void delete_Event(void *p);
   static void deleteArray_Event(void *p);
   static void destruct_Event(void *p);
   static void streamer_Event(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Event*)
   {
      ::Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Event", ::Event::Class_Version(), "./Event.h", 16,
                  typeid(::Event), DefineBehavior(ptr, ptr),
                  &::Event::Dictionary, isa_proxy, 0,
                  sizeof(::Event) );
      instance.SetNew(&new_Event);
      instance.SetNewArray(&newArray_Event);
      instance.SetDelete(&delete_Event);
      instance.SetDeleteArray(&deleteArray_Event);
      instance.SetDestructor(&destruct_Event);
      instance.SetStreamerFunc(&streamer_Event);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Event*)
   {
      return GenerateInitInstanceLocal((::Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void UnpackingModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_UnpackingModule(void *p = 0);
   static void *newArray_UnpackingModule(Long_t size, void *p);
   static void delete_UnpackingModule(void *p);
   static void deleteArray_UnpackingModule(void *p);
   static void destruct_UnpackingModule(void *p);
   static void streamer_UnpackingModule(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::UnpackingModule*)
   {
      ::UnpackingModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::UnpackingModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("UnpackingModule", ::UnpackingModule::Class_Version(), "./UnpackingModule.h", 13,
                  typeid(::UnpackingModule), DefineBehavior(ptr, ptr),
                  &::UnpackingModule::Dictionary, isa_proxy, 0,
                  sizeof(::UnpackingModule) );
      instance.SetNew(&new_UnpackingModule);
      instance.SetNewArray(&newArray_UnpackingModule);
      instance.SetDelete(&delete_UnpackingModule);
      instance.SetDeleteArray(&deleteArray_UnpackingModule);
      instance.SetDestructor(&destruct_UnpackingModule);
      instance.SetStreamerFunc(&streamer_UnpackingModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::UnpackingModule*)
   {
      return GenerateInitInstanceLocal((::UnpackingModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::UnpackingModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Unpacker2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Unpacker2(void *p);
   static void deleteArray_Unpacker2(void *p);
   static void destruct_Unpacker2(void *p);
   static void streamer_Unpacker2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Unpacker2*)
   {
      ::Unpacker2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Unpacker2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Unpacker2", ::Unpacker2::Class_Version(), "./Unpacker2.h", 12,
                  typeid(::Unpacker2), DefineBehavior(ptr, ptr),
                  &::Unpacker2::Dictionary, isa_proxy, 0,
                  sizeof(::Unpacker2) );
      instance.SetDelete(&delete_Unpacker2);
      instance.SetDeleteArray(&deleteArray_Unpacker2);
      instance.SetDestructor(&destruct_Unpacker2);
      instance.SetStreamerFunc(&streamer_Unpacker2);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Unpacker2*)
   {
      return GenerateInitInstanceLocal((::Unpacker2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Unpacker2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Unpacker_HPTDC_HR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Unpacker_HPTDC_HR(void *p = 0);
   static void *newArray_Unpacker_HPTDC_HR(Long_t size, void *p);
   static void delete_Unpacker_HPTDC_HR(void *p);
   static void deleteArray_Unpacker_HPTDC_HR(void *p);
   static void destruct_Unpacker_HPTDC_HR(void *p);
   static void streamer_Unpacker_HPTDC_HR(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Unpacker_HPTDC_HR*)
   {
      ::Unpacker_HPTDC_HR *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Unpacker_HPTDC_HR >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Unpacker_HPTDC_HR", ::Unpacker_HPTDC_HR::Class_Version(), "./Unpacker_HPTDC_HR.h", 6,
                  typeid(::Unpacker_HPTDC_HR), DefineBehavior(ptr, ptr),
                  &::Unpacker_HPTDC_HR::Dictionary, isa_proxy, 0,
                  sizeof(::Unpacker_HPTDC_HR) );
      instance.SetNew(&new_Unpacker_HPTDC_HR);
      instance.SetNewArray(&newArray_Unpacker_HPTDC_HR);
      instance.SetDelete(&delete_Unpacker_HPTDC_HR);
      instance.SetDeleteArray(&deleteArray_Unpacker_HPTDC_HR);
      instance.SetDestructor(&destruct_Unpacker_HPTDC_HR);
      instance.SetStreamerFunc(&streamer_Unpacker_HPTDC_HR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Unpacker_HPTDC_HR*)
   {
      return GenerateInitInstanceLocal((::Unpacker_HPTDC_HR*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Unpacker_HPTDC_HR*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Unpacker_HPTDC_VHR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Unpacker_HPTDC_VHR(void *p = 0);
   static void *newArray_Unpacker_HPTDC_VHR(Long_t size, void *p);
   static void delete_Unpacker_HPTDC_VHR(void *p);
   static void deleteArray_Unpacker_HPTDC_VHR(void *p);
   static void destruct_Unpacker_HPTDC_VHR(void *p);
   static void streamer_Unpacker_HPTDC_VHR(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Unpacker_HPTDC_VHR*)
   {
      ::Unpacker_HPTDC_VHR *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Unpacker_HPTDC_VHR >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Unpacker_HPTDC_VHR", ::Unpacker_HPTDC_VHR::Class_Version(), "./Unpacker_HPTDC_VHR.h", 8,
                  typeid(::Unpacker_HPTDC_VHR), DefineBehavior(ptr, ptr),
                  &::Unpacker_HPTDC_VHR::Dictionary, isa_proxy, 0,
                  sizeof(::Unpacker_HPTDC_VHR) );
      instance.SetNew(&new_Unpacker_HPTDC_VHR);
      instance.SetNewArray(&newArray_Unpacker_HPTDC_VHR);
      instance.SetDelete(&delete_Unpacker_HPTDC_VHR);
      instance.SetDeleteArray(&deleteArray_Unpacker_HPTDC_VHR);
      instance.SetDestructor(&destruct_Unpacker_HPTDC_VHR);
      instance.SetStreamerFunc(&streamer_Unpacker_HPTDC_VHR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Unpacker_HPTDC_VHR*)
   {
      return GenerateInitInstanceLocal((::Unpacker_HPTDC_VHR*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Unpacker_HPTDC_VHR*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Unpacker_HUB2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Unpacker_HUB2(void *p = 0);
   static void *newArray_Unpacker_HUB2(Long_t size, void *p);
   static void delete_Unpacker_HUB2(void *p);
   static void deleteArray_Unpacker_HUB2(void *p);
   static void destruct_Unpacker_HUB2(void *p);
   static void streamer_Unpacker_HUB2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Unpacker_HUB2*)
   {
      ::Unpacker_HUB2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Unpacker_HUB2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Unpacker_HUB2", ::Unpacker_HUB2::Class_Version(), "./Unpacker_HUB2.h", 6,
                  typeid(::Unpacker_HUB2), DefineBehavior(ptr, ptr),
                  &::Unpacker_HUB2::Dictionary, isa_proxy, 0,
                  sizeof(::Unpacker_HUB2) );
      instance.SetNew(&new_Unpacker_HUB2);
      instance.SetNewArray(&newArray_Unpacker_HUB2);
      instance.SetDelete(&delete_Unpacker_HUB2);
      instance.SetDeleteArray(&deleteArray_Unpacker_HUB2);
      instance.SetDestructor(&destruct_Unpacker_HUB2);
      instance.SetStreamerFunc(&streamer_Unpacker_HUB2);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Unpacker_HUB2*)
   {
      return GenerateInitInstanceLocal((::Unpacker_HUB2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Unpacker_HUB2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Unpacker_TRB2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Unpacker_TRB2(void *p = 0);
   static void *newArray_Unpacker_TRB2(Long_t size, void *p);
   static void delete_Unpacker_TRB2(void *p);
   static void deleteArray_Unpacker_TRB2(void *p);
   static void destruct_Unpacker_TRB2(void *p);
   static void streamer_Unpacker_TRB2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Unpacker_TRB2*)
   {
      ::Unpacker_TRB2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Unpacker_TRB2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Unpacker_TRB2", ::Unpacker_TRB2::Class_Version(), "./Unpacker_TRB2.h", 6,
                  typeid(::Unpacker_TRB2), DefineBehavior(ptr, ptr),
                  &::Unpacker_TRB2::Dictionary, isa_proxy, 0,
                  sizeof(::Unpacker_TRB2) );
      instance.SetNew(&new_Unpacker_TRB2);
      instance.SetNewArray(&newArray_Unpacker_TRB2);
      instance.SetDelete(&delete_Unpacker_TRB2);
      instance.SetDeleteArray(&deleteArray_Unpacker_TRB2);
      instance.SetDestructor(&destruct_Unpacker_TRB2);
      instance.SetStreamerFunc(&streamer_Unpacker_TRB2);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Unpacker_TRB2*)
   {
      return GenerateInitInstanceLocal((::Unpacker_TRB2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Unpacker_TRB2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Unpacker_Shower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Unpacker_Shower(void *p = 0);
   static void *newArray_Unpacker_Shower(Long_t size, void *p);
   static void delete_Unpacker_Shower(void *p);
   static void deleteArray_Unpacker_Shower(void *p);
   static void destruct_Unpacker_Shower(void *p);
   static void streamer_Unpacker_Shower(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Unpacker_Shower*)
   {
      ::Unpacker_Shower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Unpacker_Shower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Unpacker_Shower", ::Unpacker_Shower::Class_Version(), "./Unpacker_Shower.h", 6,
                  typeid(::Unpacker_Shower), DefineBehavior(ptr, ptr),
                  &::Unpacker_Shower::Dictionary, isa_proxy, 0,
                  sizeof(::Unpacker_Shower) );
      instance.SetNew(&new_Unpacker_Shower);
      instance.SetNewArray(&newArray_Unpacker_Shower);
      instance.SetDelete(&delete_Unpacker_Shower);
      instance.SetDeleteArray(&deleteArray_Unpacker_Shower);
      instance.SetDestructor(&destruct_Unpacker_Shower);
      instance.SetStreamerFunc(&streamer_Unpacker_Shower);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Unpacker_Shower*)
   {
      return GenerateInitInstanceLocal((::Unpacker_Shower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Unpacker_Shower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Unpacker_Ecal_ADC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Unpacker_Ecal_ADC(void *p = 0);
   static void *newArray_Unpacker_Ecal_ADC(Long_t size, void *p);
   static void delete_Unpacker_Ecal_ADC(void *p);
   static void deleteArray_Unpacker_Ecal_ADC(void *p);
   static void destruct_Unpacker_Ecal_ADC(void *p);
   static void streamer_Unpacker_Ecal_ADC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Unpacker_Ecal_ADC*)
   {
      ::Unpacker_Ecal_ADC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Unpacker_Ecal_ADC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Unpacker_Ecal_ADC", ::Unpacker_Ecal_ADC::Class_Version(), "./Unpacker_Ecal_ADC.h", 9,
                  typeid(::Unpacker_Ecal_ADC), DefineBehavior(ptr, ptr),
                  &::Unpacker_Ecal_ADC::Dictionary, isa_proxy, 0,
                  sizeof(::Unpacker_Ecal_ADC) );
      instance.SetNew(&new_Unpacker_Ecal_ADC);
      instance.SetNewArray(&newArray_Unpacker_Ecal_ADC);
      instance.SetDelete(&delete_Unpacker_Ecal_ADC);
      instance.SetDeleteArray(&deleteArray_Unpacker_Ecal_ADC);
      instance.SetDestructor(&destruct_Unpacker_Ecal_ADC);
      instance.SetStreamerFunc(&streamer_Unpacker_Ecal_ADC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Unpacker_Ecal_ADC*)
   {
      return GenerateInitInstanceLocal((::Unpacker_Ecal_ADC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Unpacker_Ecal_ADC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Unpacker_TRB3_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Unpacker_TRB3(void *p = 0);
   static void *newArray_Unpacker_TRB3(Long_t size, void *p);
   static void delete_Unpacker_TRB3(void *p);
   static void deleteArray_Unpacker_TRB3(void *p);
   static void destruct_Unpacker_TRB3(void *p);
   static void streamer_Unpacker_TRB3(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Unpacker_TRB3*)
   {
      ::Unpacker_TRB3 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Unpacker_TRB3 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Unpacker_TRB3", ::Unpacker_TRB3::Class_Version(), "./Unpacker_TRB3.h", 6,
                  typeid(::Unpacker_TRB3), DefineBehavior(ptr, ptr),
                  &::Unpacker_TRB3::Dictionary, isa_proxy, 0,
                  sizeof(::Unpacker_TRB3) );
      instance.SetNew(&new_Unpacker_TRB3);
      instance.SetNewArray(&newArray_Unpacker_TRB3);
      instance.SetDelete(&delete_Unpacker_TRB3);
      instance.SetDeleteArray(&deleteArray_Unpacker_TRB3);
      instance.SetDestructor(&destruct_Unpacker_TRB3);
      instance.SetStreamerFunc(&streamer_Unpacker_TRB3);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Unpacker_TRB3*)
   {
      return GenerateInitInstanceLocal((::Unpacker_TRB3*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Unpacker_TRB3*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Unpacker_Lattice_TDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Unpacker_Lattice_TDC(void *p = 0);
   static void *newArray_Unpacker_Lattice_TDC(Long_t size, void *p);
   static void delete_Unpacker_Lattice_TDC(void *p);
   static void deleteArray_Unpacker_Lattice_TDC(void *p);
   static void destruct_Unpacker_Lattice_TDC(void *p);
   static void streamer_Unpacker_Lattice_TDC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Unpacker_Lattice_TDC*)
   {
      ::Unpacker_Lattice_TDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Unpacker_Lattice_TDC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Unpacker_Lattice_TDC", ::Unpacker_Lattice_TDC::Class_Version(), "./Unpacker_Lattice_TDC.h", 10,
                  typeid(::Unpacker_Lattice_TDC), DefineBehavior(ptr, ptr),
                  &::Unpacker_Lattice_TDC::Dictionary, isa_proxy, 0,
                  sizeof(::Unpacker_Lattice_TDC) );
      instance.SetNew(&new_Unpacker_Lattice_TDC);
      instance.SetNewArray(&newArray_Unpacker_Lattice_TDC);
      instance.SetDelete(&delete_Unpacker_Lattice_TDC);
      instance.SetDeleteArray(&deleteArray_Unpacker_Lattice_TDC);
      instance.SetDestructor(&destruct_Unpacker_Lattice_TDC);
      instance.SetStreamerFunc(&streamer_Unpacker_Lattice_TDC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Unpacker_Lattice_TDC*)
   {
      return GenerateInitInstanceLocal((::Unpacker_Lattice_TDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Unpacker_Lattice_TDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TDCHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDCHit::Class_Name()
{
   return "TDCHit";
}

//______________________________________________________________________________
const char *TDCHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDCHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDCHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDCHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDCHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDCHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDCHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDCHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ADCHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ADCHit::Class_Name()
{
   return "ADCHit";
}

//______________________________________________________________________________
const char *ADCHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ADCHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ADCHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ADCHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ADCHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ADCHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ADCHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ADCHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Event::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Event::Class_Name()
{
   return "Event";
}

//______________________________________________________________________________
const char *Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Event::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *UnpackingModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *UnpackingModule::Class_Name()
{
   return "UnpackingModule";
}

//______________________________________________________________________________
const char *UnpackingModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::UnpackingModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int UnpackingModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::UnpackingModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void UnpackingModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::UnpackingModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *UnpackingModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::UnpackingModule*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Unpacker2::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unpacker2::Class_Name()
{
   return "Unpacker2";
}

//______________________________________________________________________________
const char *Unpacker2::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unpacker2::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unpacker2::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unpacker2::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker2*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Unpacker_HPTDC_HR::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unpacker_HPTDC_HR::Class_Name()
{
   return "Unpacker_HPTDC_HR";
}

//______________________________________________________________________________
const char *Unpacker_HPTDC_HR::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HPTDC_HR*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unpacker_HPTDC_HR::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HPTDC_HR*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unpacker_HPTDC_HR::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HPTDC_HR*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unpacker_HPTDC_HR::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HPTDC_HR*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Unpacker_HPTDC_VHR::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unpacker_HPTDC_VHR::Class_Name()
{
   return "Unpacker_HPTDC_VHR";
}

//______________________________________________________________________________
const char *Unpacker_HPTDC_VHR::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HPTDC_VHR*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unpacker_HPTDC_VHR::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HPTDC_VHR*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unpacker_HPTDC_VHR::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HPTDC_VHR*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unpacker_HPTDC_VHR::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HPTDC_VHR*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Unpacker_HUB2::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unpacker_HUB2::Class_Name()
{
   return "Unpacker_HUB2";
}

//______________________________________________________________________________
const char *Unpacker_HUB2::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HUB2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unpacker_HUB2::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HUB2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unpacker_HUB2::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HUB2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unpacker_HUB2::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_HUB2*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Unpacker_TRB2::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unpacker_TRB2::Class_Name()
{
   return "Unpacker_TRB2";
}

//______________________________________________________________________________
const char *Unpacker_TRB2::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_TRB2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unpacker_TRB2::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_TRB2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unpacker_TRB2::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_TRB2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unpacker_TRB2::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_TRB2*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Unpacker_Shower::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unpacker_Shower::Class_Name()
{
   return "Unpacker_Shower";
}

//______________________________________________________________________________
const char *Unpacker_Shower::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Shower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unpacker_Shower::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Shower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unpacker_Shower::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Shower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unpacker_Shower::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Shower*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Unpacker_Ecal_ADC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unpacker_Ecal_ADC::Class_Name()
{
   return "Unpacker_Ecal_ADC";
}

//______________________________________________________________________________
const char *Unpacker_Ecal_ADC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Ecal_ADC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unpacker_Ecal_ADC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Ecal_ADC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unpacker_Ecal_ADC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Ecal_ADC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unpacker_Ecal_ADC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Ecal_ADC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Unpacker_TRB3::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unpacker_TRB3::Class_Name()
{
   return "Unpacker_TRB3";
}

//______________________________________________________________________________
const char *Unpacker_TRB3::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_TRB3*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unpacker_TRB3::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_TRB3*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unpacker_TRB3::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_TRB3*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unpacker_TRB3::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_TRB3*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Unpacker_Lattice_TDC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Unpacker_Lattice_TDC::Class_Name()
{
   return "Unpacker_Lattice_TDC";
}

//______________________________________________________________________________
const char *Unpacker_Lattice_TDC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Lattice_TDC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Unpacker_Lattice_TDC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Lattice_TDC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Unpacker_Lattice_TDC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Lattice_TDC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Unpacker_Lattice_TDC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Unpacker_Lattice_TDC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Unpacker2::Streamer(TBuffer &R__b)
{
   // Stream an object of class Unpacker2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         map<std::string,UnpackingModule*> &R__stl =  unpackers;
         R__stl.clear();
         TClass *R__tcl2 = TBuffer::GetClass(typeid(UnpackingModule));
         if (R__tcl2==0) {
            Error("unpackers streamer","Missing the TClass object for UnpackingModule!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            UnpackingModule* R__t2;
            R__t2 = (UnpackingModule*)R__b.ReadObjectAny(R__tcl2);
            typedef string Value_t;
            std::pair<Value_t const, UnpackingModule* > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b >> eventsToAnalyze;
      R__b >> invertBytes;
      R__b >> fullSetup;
      R__b >> debugMode;
      R__b >> fileSize;
      R__b.StreamObject(&(hdr),typeid(Unpacker2::EventHdr));
      R__b.StreamObject(&(subHdr),typeid(Unpacker2::SubEventHdr));
      //R__b.ReadArray(pHdr);
      //R__b.ReadArray(subPHdr);
      R__b.CheckByteCount(R__s, R__c, Unpacker2::IsA());
   } else {
      R__c = R__b.WriteVersion(Unpacker2::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         map<std::string,UnpackingModule*> &R__stl =  unpackers;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<std::string,UnpackingModule*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b << ((*R__k).second);
            }
         }
      }
      R__b << eventsToAnalyze;
      R__b << invertBytes;
      R__b << fullSetup;
      R__b << debugMode;
      R__b << fileSize;
      R__b.StreamObject(&(hdr),typeid(Unpacker2::EventHdr));
      R__b.StreamObject(&(subHdr),typeid(Unpacker2::SubEventHdr));
      //R__b.WriteArray(pHdr, __COUNTER__);
      //R__b.WriteArray(subPHdr, __COUNTER__);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Unpacker2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Unpacker2.
      TClass *R__cl = ::Unpacker2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "unpackers", (void*)&unpackers);
      R__insp.InspectMember("map<std::string,UnpackingModule*>", (void*)&unpackers, "unpackers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventsToAnalyze", &eventsToAnalyze);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "invertBytes", &invertBytes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fullSetup", &fullSetup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "debugMode", &debugMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fileSize", &fileSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hdr", (void*)&hdr);
      R__insp.InspectMember("Unpacker2::EventHdr", (void*)&hdr, "hdr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subHdr", (void*)&subHdr);
      R__insp.InspectMember("Unpacker2::SubEventHdr", (void*)&subHdr, "subHdr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pHdr", &pHdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*subPHdr", &subPHdr);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_Unpacker2(void *p) {
      delete ((::Unpacker2*)p);
   }
   static void deleteArray_Unpacker2(void *p) {
      delete [] ((::Unpacker2*)p);
   }
   static void destruct_Unpacker2(void *p) {
      typedef ::Unpacker2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Unpacker2(TBuffer &buf, void *obj) {
      ((::Unpacker2*)obj)->::Unpacker2::Streamer(buf);
   }
} // end of namespace ROOT for class ::Unpacker2

//______________________________________________________________________________
void TDCHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDCHit.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> channel;
      R__b >> fineTime1;
      R__b >> coarseTime1;
      R__b.ReadStaticArray((float*)fineTimes);
      R__b.ReadStaticArray((float*)coarseTimes);
      R__b >> leadTime1;
      R__b >> trailTime1;
      R__b.ReadStaticArray((float*)leadTimes);
      R__b.ReadStaticArray((float*)trailTimes);
      R__b >> leadsNum;
      R__b >> trailsNum;
      R__b >> finesNum;
      R__b >> coarsesNum;
      R__b >> tot;
      R__b.CheckByteCount(R__s, R__c, TDCHit::IsA());
   } else {
      R__c = R__b.WriteVersion(TDCHit::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << channel;
      R__b << fineTime1;
      R__b << coarseTime1;
      R__b.WriteArray(fineTimes, 100);
      R__b.WriteArray(coarseTimes, 100);
      R__b << leadTime1;
      R__b << trailTime1;
      R__b.WriteArray(leadTimes, 100);
      R__b.WriteArray(trailTimes, 100);
      R__b << leadsNum;
      R__b << trailsNum;
      R__b << finesNum;
      R__b << coarsesNum;
      R__b << tot;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDCHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDCHit.
      TClass *R__cl = ::TDCHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fineTime1", &fineTime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coarseTime1", &coarseTime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fineTimes[100]", fineTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coarseTimes[100]", coarseTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadTime1", &leadTime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trailTime1", &trailTime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadTimes[100]", leadTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trailTimes[100]", trailTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadsNum", &leadsNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trailsNum", &trailsNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "finesNum", &finesNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coarsesNum", &coarsesNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tot", &tot);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDCHit(void *p) {
      return  p ? new(p) ::TDCHit : new ::TDCHit;
   }
   static void *newArray_TDCHit(Long_t nElements, void *p) {
      return p ? new(p) ::TDCHit[nElements] : new ::TDCHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDCHit(void *p) {
      delete ((::TDCHit*)p);
   }
   static void deleteArray_TDCHit(void *p) {
      delete [] ((::TDCHit*)p);
   }
   static void destruct_TDCHit(void *p) {
      typedef ::TDCHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TDCHit(TBuffer &buf, void *obj) {
      ((::TDCHit*)obj)->::TDCHit::Streamer(buf);
   }
} // end of namespace ROOT for class ::TDCHit

//______________________________________________________________________________
void ADCHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ADCHit.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> channel;
      R__b >> ADC;
      R__b >> nHits;
      R__b.ReadStaticArray((int*)samples);
      R__b >> dspSum;
      R__b >> dspMean;
      R__b >> dspCfA;
      R__b >> dspCfB;
      R__b >> dspCfT;
      R__b >> localPtr;
      R__b.CheckByteCount(R__s, R__c, ADCHit::IsA());
   } else {
      R__c = R__b.WriteVersion(ADCHit::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << channel;
      R__b << ADC;
      R__b << nHits;
      R__b.WriteArray(samples, 128);
      R__b << dspSum;
      R__b << dspMean;
      R__b << dspCfA;
      R__b << dspCfB;
      R__b << dspCfT;
      R__b << localPtr;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ADCHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ADCHit.
      TClass *R__cl = ::ADCHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ADC", &ADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHits", &nHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "samples[128]", samples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dspSum", &dspSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dspMean", &dspMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dspCfA", &dspCfA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dspCfB", &dspCfB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dspCfT", &dspCfT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "localPtr", &localPtr);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ADCHit(void *p) {
      return  p ? new(p) ::ADCHit : new ::ADCHit;
   }
   static void *newArray_ADCHit(Long_t nElements, void *p) {
      return p ? new(p) ::ADCHit[nElements] : new ::ADCHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_ADCHit(void *p) {
      delete ((::ADCHit*)p);
   }
   static void deleteArray_ADCHit(void *p) {
      delete [] ((::ADCHit*)p);
   }
   static void destruct_ADCHit(void *p) {
      typedef ::ADCHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ADCHit(TBuffer &buf, void *obj) {
      ((::ADCHit*)obj)->::ADCHit::Streamer(buf);
   }
} // end of namespace ROOT for class ::ADCHit

//______________________________________________________________________________
void Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class Event.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> totalNTDCHits;
      R__b >> totalNADCHits;
      R__b >> TDCReferenceTime;
      R__b >> errorBits;
      TDCHits->Streamer(R__b);
      ADCHits->Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, Event::IsA());
   } else {
      R__c = R__b.WriteVersion(Event::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << totalNTDCHits;
      R__b << totalNADCHits;
      R__b << TDCReferenceTime;
      R__b << errorBits;
      TDCHits->Streamer(R__b);
      ADCHits->Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Event.
      TClass *R__cl = ::Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalNTDCHits", &totalNTDCHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalNADCHits", &totalNADCHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TDCReferenceTime", &TDCReferenceTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "errorBits", &errorBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TDCHits", &TDCHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ADCHits", &ADCHits);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Event(void *p) {
      return  p ? new(p) ::Event : new ::Event;
   }
   static void *newArray_Event(Long_t nElements, void *p) {
      return p ? new(p) ::Event[nElements] : new ::Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_Event(void *p) {
      delete ((::Event*)p);
   }
   static void deleteArray_Event(void *p) {
      delete [] ((::Event*)p);
   }
   static void destruct_Event(void *p) {
      typedef ::Event current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Event(TBuffer &buf, void *obj) {
      ((::Event*)obj)->::Event::Streamer(buf);
   }
} // end of namespace ROOT for class ::Event

//______________________________________________________________________________
void UnpackingModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class UnpackingModule.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); boardType = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); boardAddress = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); hubAddress = R__str.Data(); }
      R__b >> channelNumber;
      R__b >> channelOffset;
      R__b >> resolution;
      { TString R__str; R__str.Streamer(R__b); measurementType = R__str.Data(); }
      R__b >> entireEventSize;
      R__b >> invertBytes;
      {
         map<std::string,UnpackingModule*> &R__stl =  internalUnpackers;
         R__stl.clear();
         TClass *R__tcl2 = TBuffer::GetClass(typeid(UnpackingModule));
         if (R__tcl2==0) {
            Error("internalUnpackers streamer","Missing the TClass object for UnpackingModule!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            UnpackingModule* R__t2;
            R__t2 = (UnpackingModule*)R__b.ReadObjectAny(R__tcl2);
            typedef string Value_t;
            std::pair<Value_t const, UnpackingModule* > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b >> debugMode;
      R__b.CheckByteCount(R__s, R__c, UnpackingModule::IsA());
   } else {
      R__c = R__b.WriteVersion(UnpackingModule::IsA(), kTRUE);
      TObject::Streamer(R__b);
      { TString R__str = boardType.c_str(); R__str.Streamer(R__b);}
      { TString R__str = boardAddress.c_str(); R__str.Streamer(R__b);}
      { TString R__str = hubAddress.c_str(); R__str.Streamer(R__b);}
      R__b << channelNumber;
      R__b << channelOffset;
      R__b << resolution;
      { TString R__str = measurementType.c_str(); R__str.Streamer(R__b);}
      R__b << entireEventSize;
      R__b << invertBytes;
      {
         map<std::string,UnpackingModule*> &R__stl =  internalUnpackers;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<std::string,UnpackingModule*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b << ((*R__k).second);
            }
         }
      }
      R__b << debugMode;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void UnpackingModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class UnpackingModule.
      TClass *R__cl = ::UnpackingModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boardType", (void*)&boardType);
      R__insp.InspectMember("string", (void*)&boardType, "boardType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boardAddress", (void*)&boardAddress);
      R__insp.InspectMember("string", (void*)&boardAddress, "boardAddress.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hubAddress", (void*)&hubAddress);
      R__insp.InspectMember("string", (void*)&hubAddress, "hubAddress.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelNumber", &channelNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelOffset", &channelOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resolution", &resolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "measurementType", (void*)&measurementType);
      R__insp.InspectMember("string", (void*)&measurementType, "measurementType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "entireEventSize", &entireEventSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "invertBytes", &invertBytes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "internalUnpackers", (void*)&internalUnpackers);
      R__insp.InspectMember("map<std::string,UnpackingModule*>", (void*)&internalUnpackers, "internalUnpackers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "debugMode", &debugMode);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_UnpackingModule(void *p) {
      return  p ? new(p) ::UnpackingModule : new ::UnpackingModule;
   }
   static void *newArray_UnpackingModule(Long_t nElements, void *p) {
      return p ? new(p) ::UnpackingModule[nElements] : new ::UnpackingModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_UnpackingModule(void *p) {
      delete ((::UnpackingModule*)p);
   }
   static void deleteArray_UnpackingModule(void *p) {
      delete [] ((::UnpackingModule*)p);
   }
   static void destruct_UnpackingModule(void *p) {
      typedef ::UnpackingModule current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_UnpackingModule(TBuffer &buf, void *obj) {
      ((::UnpackingModule*)obj)->::UnpackingModule::Streamer(buf);
   }
} // end of namespace ROOT for class ::UnpackingModule

//______________________________________________________________________________
void Unpacker_HPTDC_HR::Streamer(TBuffer &R__b)
{
   // Stream an object of class Unpacker_HPTDC_HR.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      UnpackingModule::Streamer(R__b);
      //R__b.ReadArray(leadTimes);
      //R__b.ReadArray(trailTimes);
      //R__b.ReadArray(leadMult);
      //R__b.ReadArray(trailMult);
      R__b >> channelNumber;
      //R__b.ReadArray(firstLeadCorrect);
      R__b.CheckByteCount(R__s, R__c, Unpacker_HPTDC_HR::IsA());
   } else {
      R__c = R__b.WriteVersion(Unpacker_HPTDC_HR::IsA(), kTRUE);
      UnpackingModule::Streamer(R__b);
      //R__b.WriteArray(leadTimes, __COUNTER__);
      //R__b.WriteArray(trailTimes, __COUNTER__);
      //R__b.WriteArray(leadMult, __COUNTER__);
      //R__b.WriteArray(trailMult, __COUNTER__);
      R__b << channelNumber;
      //R__b.WriteArray(firstLeadCorrect, __COUNTER__);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Unpacker_HPTDC_HR::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Unpacker_HPTDC_HR.
      TClass *R__cl = ::Unpacker_HPTDC_HR::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*leadTimes", &leadTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trailTimes", &trailTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*leadMult", &leadMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trailMult", &trailMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelNumber", &channelNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*firstLeadCorrect", &firstLeadCorrect);
      UnpackingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Unpacker_HPTDC_HR(void *p) {
      return  p ? new(p) ::Unpacker_HPTDC_HR : new ::Unpacker_HPTDC_HR;
   }
   static void *newArray_Unpacker_HPTDC_HR(Long_t nElements, void *p) {
      return p ? new(p) ::Unpacker_HPTDC_HR[nElements] : new ::Unpacker_HPTDC_HR[nElements];
   }
   // Wrapper around operator delete
   static void delete_Unpacker_HPTDC_HR(void *p) {
      delete ((::Unpacker_HPTDC_HR*)p);
   }
   static void deleteArray_Unpacker_HPTDC_HR(void *p) {
      delete [] ((::Unpacker_HPTDC_HR*)p);
   }
   static void destruct_Unpacker_HPTDC_HR(void *p) {
      typedef ::Unpacker_HPTDC_HR current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Unpacker_HPTDC_HR(TBuffer &buf, void *obj) {
      ((::Unpacker_HPTDC_HR*)obj)->::Unpacker_HPTDC_HR::Streamer(buf);
   }
} // end of namespace ROOT for class ::Unpacker_HPTDC_HR

//______________________________________________________________________________
void Unpacker_HPTDC_VHR::Streamer(TBuffer &R__b)
{
   // Stream an object of class Unpacker_HPTDC_VHR.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      UnpackingModule::Streamer(R__b);
      //R__b.ReadArray(leadTimes);
      //R__b.ReadArray(trailTimes);
      //R__b.ReadArray(leadMult);
      //R__b.ReadArray(trailMult);
      R__b >> channelNumber;
      R__b >> useInlCorrections;
      R__b >> inlCorrector;
      R__b.CheckByteCount(R__s, R__c, Unpacker_HPTDC_VHR::IsA());
   } else {
      R__c = R__b.WriteVersion(Unpacker_HPTDC_VHR::IsA(), kTRUE);
      UnpackingModule::Streamer(R__b);
      //R__b.WriteArray(leadTimes, __COUNTER__);
      //R__b.WriteArray(trailTimes, __COUNTER__);
      //R__b.WriteArray(leadMult, __COUNTER__);
      //R__b.WriteArray(trailMult, __COUNTER__);
      R__b << channelNumber;
      R__b << useInlCorrections;
      R__b << inlCorrector;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Unpacker_HPTDC_VHR::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Unpacker_HPTDC_VHR.
      TClass *R__cl = ::Unpacker_HPTDC_VHR::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*leadTimes", &leadTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trailTimes", &trailTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*leadMult", &leadMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trailMult", &trailMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelNumber", &channelNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useInlCorrections", &useInlCorrections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inlCorrector", &inlCorrector);
      UnpackingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Unpacker_HPTDC_VHR(void *p) {
      return  p ? new(p) ::Unpacker_HPTDC_VHR : new ::Unpacker_HPTDC_VHR;
   }
   static void *newArray_Unpacker_HPTDC_VHR(Long_t nElements, void *p) {
      return p ? new(p) ::Unpacker_HPTDC_VHR[nElements] : new ::Unpacker_HPTDC_VHR[nElements];
   }
   // Wrapper around operator delete
   static void delete_Unpacker_HPTDC_VHR(void *p) {
      delete ((::Unpacker_HPTDC_VHR*)p);
   }
   static void deleteArray_Unpacker_HPTDC_VHR(void *p) {
      delete [] ((::Unpacker_HPTDC_VHR*)p);
   }
   static void destruct_Unpacker_HPTDC_VHR(void *p) {
      typedef ::Unpacker_HPTDC_VHR current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Unpacker_HPTDC_VHR(TBuffer &buf, void *obj) {
      ((::Unpacker_HPTDC_VHR*)obj)->::Unpacker_HPTDC_VHR::Streamer(buf);
   }
} // end of namespace ROOT for class ::Unpacker_HPTDC_VHR

//______________________________________________________________________________
void Unpacker_HUB2::Streamer(TBuffer &R__b)
{
   // Stream an object of class Unpacker_HUB2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      UnpackingModule::Streamer(R__b);
      R__b >> event;
      R__b.CheckByteCount(R__s, R__c, Unpacker_HUB2::IsA());
   } else {
      R__c = R__b.WriteVersion(Unpacker_HUB2::IsA(), kTRUE);
      UnpackingModule::Streamer(R__b);
      R__b << event;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Unpacker_HUB2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Unpacker_HUB2.
      TClass *R__cl = ::Unpacker_HUB2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*event", &event);
      UnpackingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Unpacker_HUB2(void *p) {
      return  p ? new(p) ::Unpacker_HUB2 : new ::Unpacker_HUB2;
   }
   static void *newArray_Unpacker_HUB2(Long_t nElements, void *p) {
      return p ? new(p) ::Unpacker_HUB2[nElements] : new ::Unpacker_HUB2[nElements];
   }
   // Wrapper around operator delete
   static void delete_Unpacker_HUB2(void *p) {
      delete ((::Unpacker_HUB2*)p);
   }
   static void deleteArray_Unpacker_HUB2(void *p) {
      delete [] ((::Unpacker_HUB2*)p);
   }
   static void destruct_Unpacker_HUB2(void *p) {
      typedef ::Unpacker_HUB2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Unpacker_HUB2(TBuffer &buf, void *obj) {
      ((::Unpacker_HUB2*)obj)->::Unpacker_HUB2::Streamer(buf);
   }
} // end of namespace ROOT for class ::Unpacker_HUB2

//______________________________________________________________________________
void Unpacker_TRB2::Streamer(TBuffer &R__b)
{
   // Stream an object of class Unpacker_TRB2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      UnpackingModule::Streamer(R__b);
      R__b >> event;
      R__b >> referenceChannel;
      R__b.CheckByteCount(R__s, R__c, Unpacker_TRB2::IsA());
   } else {
      R__c = R__b.WriteVersion(Unpacker_TRB2::IsA(), kTRUE);
      UnpackingModule::Streamer(R__b);
      R__b << event;
      R__b << referenceChannel;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Unpacker_TRB2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Unpacker_TRB2.
      TClass *R__cl = ::Unpacker_TRB2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*event", &event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "referenceChannel", &referenceChannel);
      UnpackingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Unpacker_TRB2(void *p) {
      return  p ? new(p) ::Unpacker_TRB2 : new ::Unpacker_TRB2;
   }
   static void *newArray_Unpacker_TRB2(Long_t nElements, void *p) {
      return p ? new(p) ::Unpacker_TRB2[nElements] : new ::Unpacker_TRB2[nElements];
   }
   // Wrapper around operator delete
   static void delete_Unpacker_TRB2(void *p) {
      delete ((::Unpacker_TRB2*)p);
   }
   static void deleteArray_Unpacker_TRB2(void *p) {
      delete [] ((::Unpacker_TRB2*)p);
   }
   static void destruct_Unpacker_TRB2(void *p) {
      typedef ::Unpacker_TRB2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Unpacker_TRB2(TBuffer &buf, void *obj) {
      ((::Unpacker_TRB2*)obj)->::Unpacker_TRB2::Streamer(buf);
   }
} // end of namespace ROOT for class ::Unpacker_TRB2

//______________________________________________________________________________
void Unpacker_Shower::Streamer(TBuffer &R__b)
{
   // Stream an object of class Unpacker_Shower.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      UnpackingModule::Streamer(R__b);
      R__b >> event;
      R__b.CheckByteCount(R__s, R__c, Unpacker_Shower::IsA());
   } else {
      R__c = R__b.WriteVersion(Unpacker_Shower::IsA(), kTRUE);
      UnpackingModule::Streamer(R__b);
      R__b << event;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Unpacker_Shower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Unpacker_Shower.
      TClass *R__cl = ::Unpacker_Shower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*event", &event);
      UnpackingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Unpacker_Shower(void *p) {
      return  p ? new(p) ::Unpacker_Shower : new ::Unpacker_Shower;
   }
   static void *newArray_Unpacker_Shower(Long_t nElements, void *p) {
      return p ? new(p) ::Unpacker_Shower[nElements] : new ::Unpacker_Shower[nElements];
   }
   // Wrapper around operator delete
   static void delete_Unpacker_Shower(void *p) {
      delete ((::Unpacker_Shower*)p);
   }
   static void deleteArray_Unpacker_Shower(void *p) {
      delete [] ((::Unpacker_Shower*)p);
   }
   static void destruct_Unpacker_Shower(void *p) {
      typedef ::Unpacker_Shower current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Unpacker_Shower(TBuffer &buf, void *obj) {
      ((::Unpacker_Shower*)obj)->::Unpacker_Shower::Streamer(buf);
   }
} // end of namespace ROOT for class ::Unpacker_Shower

//______________________________________________________________________________
void Unpacker_Ecal_ADC::Streamer(TBuffer &R__b)
{
   // Stream an object of class Unpacker_Ecal_ADC.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      UnpackingModule::Streamer(R__b);
      R__b >> event;
      R__b.ReadStaticArray((int*)samples);
      R__b.ReadStaticArray((int*)dspSums);
      R__b.ReadStaticArray((int*)dspMeans);
      R__b.ReadStaticArray((int*)dspCfA);
      R__b.ReadStaticArray((int*)dspCfB);
      R__b.ReadStaticArray((int*)dspCfT);
      R__b.CheckByteCount(R__s, R__c, Unpacker_Ecal_ADC::IsA());
   } else {
      R__c = R__b.WriteVersion(Unpacker_Ecal_ADC::IsA(), kTRUE);
      UnpackingModule::Streamer(R__b);
      R__b << event;
      R__b.WriteArray((int*)samples, 1024);
      R__b.WriteArray(dspSums, 8);
      R__b.WriteArray(dspMeans, 8);
      R__b.WriteArray(dspCfA, 8);
      R__b.WriteArray(dspCfB, 8);
      R__b.WriteArray(dspCfT, 8);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Unpacker_Ecal_ADC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Unpacker_Ecal_ADC.
      TClass *R__cl = ::Unpacker_Ecal_ADC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*event", &event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "samples[8][128]", samples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dspSums[8]", dspSums);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dspMeans[8]", dspMeans);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dspCfA[8]", dspCfA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dspCfB[8]", dspCfB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dspCfT[8]", dspCfT);
      UnpackingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Unpacker_Ecal_ADC(void *p) {
      return  p ? new(p) ::Unpacker_Ecal_ADC : new ::Unpacker_Ecal_ADC;
   }
   static void *newArray_Unpacker_Ecal_ADC(Long_t nElements, void *p) {
      return p ? new(p) ::Unpacker_Ecal_ADC[nElements] : new ::Unpacker_Ecal_ADC[nElements];
   }
   // Wrapper around operator delete
   static void delete_Unpacker_Ecal_ADC(void *p) {
      delete ((::Unpacker_Ecal_ADC*)p);
   }
   static void deleteArray_Unpacker_Ecal_ADC(void *p) {
      delete [] ((::Unpacker_Ecal_ADC*)p);
   }
   static void destruct_Unpacker_Ecal_ADC(void *p) {
      typedef ::Unpacker_Ecal_ADC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Unpacker_Ecal_ADC(TBuffer &buf, void *obj) {
      ((::Unpacker_Ecal_ADC*)obj)->::Unpacker_Ecal_ADC::Streamer(buf);
   }
} // end of namespace ROOT for class ::Unpacker_Ecal_ADC

//______________________________________________________________________________
void Unpacker_TRB3::Streamer(TBuffer &R__b)
{
   // Stream an object of class Unpacker_TRB3.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      UnpackingModule::Streamer(R__b);
      R__b >> event;
      R__b >> referenceChannel;
      R__b.CheckByteCount(R__s, R__c, Unpacker_TRB3::IsA());
   } else {
      R__c = R__b.WriteVersion(Unpacker_TRB3::IsA(), kTRUE);
      UnpackingModule::Streamer(R__b);
      R__b << event;
      R__b << referenceChannel;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Unpacker_TRB3::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Unpacker_TRB3.
      TClass *R__cl = ::Unpacker_TRB3::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*event", &event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "referenceChannel", &referenceChannel);
      UnpackingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Unpacker_TRB3(void *p) {
      return  p ? new(p) ::Unpacker_TRB3 : new ::Unpacker_TRB3;
   }
   static void *newArray_Unpacker_TRB3(Long_t nElements, void *p) {
      return p ? new(p) ::Unpacker_TRB3[nElements] : new ::Unpacker_TRB3[nElements];
   }
   // Wrapper around operator delete
   static void delete_Unpacker_TRB3(void *p) {
      delete ((::Unpacker_TRB3*)p);
   }
   static void deleteArray_Unpacker_TRB3(void *p) {
      delete [] ((::Unpacker_TRB3*)p);
   }
   static void destruct_Unpacker_TRB3(void *p) {
      typedef ::Unpacker_TRB3 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Unpacker_TRB3(TBuffer &buf, void *obj) {
      ((::Unpacker_TRB3*)obj)->::Unpacker_TRB3::Streamer(buf);
   }
} // end of namespace ROOT for class ::Unpacker_TRB3

//______________________________________________________________________________
void Unpacker_Lattice_TDC::Streamer(TBuffer &R__b)
{
   // Stream an object of class Unpacker_Lattice_TDC.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      UnpackingModule::Streamer(R__b);
      //R__b.ReadArray(leadTimes);
      //R__b.ReadArray(trailTimes);
      //R__b.ReadArray(leadMult);
      //R__b.ReadArray(trailMult);
      //R__b.ReadArray(fineTimes);
      //R__b.ReadArray(coarseTimes);
      R__b >> channelNumber;
      R__b >> offset;
      //R__b.ReadArray(corrections);
      R__b >> useCorrections;
      R__b >> errorBits;
      R__b.CheckByteCount(R__s, R__c, Unpacker_Lattice_TDC::IsA());
   } else {
      R__c = R__b.WriteVersion(Unpacker_Lattice_TDC::IsA(), kTRUE);
      UnpackingModule::Streamer(R__b);
      //R__b.WriteArray(leadTimes, __COUNTER__);
      //R__b.WriteArray(trailTimes, __COUNTER__);
      //R__b.WriteArray(leadMult, __COUNTER__);
      //R__b.WriteArray(trailMult, __COUNTER__);
      //R__b.WriteArray(fineTimes, __COUNTER__);
      //R__b.WriteArray(coarseTimes, __COUNTER__);
      R__b << channelNumber;
      R__b << offset;
      //R__b.WriteArray(corrections, __COUNTER__);      R__b << useCorrections;
      R__b << errorBits;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Unpacker_Lattice_TDC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Unpacker_Lattice_TDC.
      TClass *R__cl = ::Unpacker_Lattice_TDC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*leadTimes", &leadTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trailTimes", &trailTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*leadMult", &leadMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trailMult", &trailMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fineTimes", &fineTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*coarseTimes", &coarseTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channelNumber", &channelNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "offset", &offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*corrections", &corrections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useCorrections", &useCorrections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "errorBits", &errorBits);
      UnpackingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Unpacker_Lattice_TDC(void *p) {
      return  p ? new(p) ::Unpacker_Lattice_TDC : new ::Unpacker_Lattice_TDC;
   }
   static void *newArray_Unpacker_Lattice_TDC(Long_t nElements, void *p) {
      return p ? new(p) ::Unpacker_Lattice_TDC[nElements] : new ::Unpacker_Lattice_TDC[nElements];
   }
   // Wrapper around operator delete
   static void delete_Unpacker_Lattice_TDC(void *p) {
      delete ((::Unpacker_Lattice_TDC*)p);
   }
   static void deleteArray_Unpacker_Lattice_TDC(void *p) {
      delete [] ((::Unpacker_Lattice_TDC*)p);
   }
   static void destruct_Unpacker_Lattice_TDC(void *p) {
      typedef ::Unpacker_Lattice_TDC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Unpacker_Lattice_TDC(TBuffer &buf, void *obj) {
      ((::Unpacker_Lattice_TDC*)obj)->::Unpacker_Lattice_TDC::Streamer(buf);
   }
} // end of namespace ROOT for class ::Unpacker_Lattice_TDC

namespace ROOT {
   void maplEstringcOUnpackingModulemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOUnpackingModulemUgR_Dictionary();
   static void *new_maplEstringcOUnpackingModulemUgR(void *p = 0);
   static void *newArray_maplEstringcOUnpackingModulemUgR(Long_t size, void *p);
   static void delete_maplEstringcOUnpackingModulemUgR(void *p);
   static void deleteArray_maplEstringcOUnpackingModulemUgR(void *p);
   static void destruct_maplEstringcOUnpackingModulemUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,UnpackingModule*>*)
   {
      map<string,UnpackingModule*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,UnpackingModule*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,UnpackingModule*>", -2, "/usr/lib64/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<string,UnpackingModule*>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOUnpackingModulemUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,UnpackingModule*>) );
      instance.SetNew(&new_maplEstringcOUnpackingModulemUgR);
      instance.SetNewArray(&newArray_maplEstringcOUnpackingModulemUgR);
      instance.SetDelete(&delete_maplEstringcOUnpackingModulemUgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOUnpackingModulemUgR);
      instance.SetDestructor(&destruct_maplEstringcOUnpackingModulemUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,UnpackingModule*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,UnpackingModule*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOUnpackingModulemUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,UnpackingModule*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOUnpackingModulemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,UnpackingModule*> : new map<string,UnpackingModule*>;
   }
   static void *newArray_maplEstringcOUnpackingModulemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,UnpackingModule*>[nElements] : new map<string,UnpackingModule*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOUnpackingModulemUgR(void *p) {
      delete ((map<string,UnpackingModule*>*)p);
   }
   static void deleteArray_maplEstringcOUnpackingModulemUgR(void *p) {
      delete [] ((map<string,UnpackingModule*>*)p);
   }
   static void destruct_maplEstringcOUnpackingModulemUgR(void *p) {
      typedef map<string,UnpackingModule*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,UnpackingModule*>

/********************************************************
* mydict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablemydict();

extern "C" void G__set_cpp_environmentmydict() {
  G__cpp_reset_tagtablemydict();
}
#include <new>
extern "C" int G__cpp_dllrevmydict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TDCHit */
static int G__mydict_531_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDCHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDCHit[n];
     } else {
       p = new((void*) gvp) TDCHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDCHit;
     } else {
       p = new((void*) gvp) TDCHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_TDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDCHit*) G__getstructoffset())->SetChannel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDCHit*) G__getstructoffset())->AddLeadTime((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDCHit*) G__getstructoffset())->AddTrailTime((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDCHit*) G__getstructoffset())->AddTot((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDCHit*) G__getstructoffset())->AddFineTime((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDCHit*) G__getstructoffset())->AddCoarseTime((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDCHit*) G__getstructoffset())->GetChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDCHit*) G__getstructoffset())->GetLeadTime1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDCHit*) G__getstructoffset())->GetTrailTime1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDCHit*) G__getstructoffset())->GetFineTime1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDCHit*) G__getstructoffset())->GetCoarseTime1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDCHit*) G__getstructoffset())->GetLeadsNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TDCHit*) G__getstructoffset())->GetTrailsNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDCHit*) G__getstructoffset())->GetLeadTime((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDCHit*) G__getstructoffset())->GetTrailTime((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDCHit*) G__getstructoffset())->GetFineTime((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDCHit*) G__getstructoffset())->GetCoarseTime((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TDCHit*) G__getstructoffset())->GetTot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDCHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDCHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDCHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDCHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDCHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDCHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDCHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDCHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_531_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDCHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_531_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TDCHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TDCHit(*(TDCHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_TDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDCHit G__TTDCHit;
static int G__mydict_531_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDCHit*) (soff+(sizeof(TDCHit)*i)))->~G__TTDCHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDCHit*) (soff))->~G__TTDCHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_531_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDCHit* dest = (TDCHit*) G__getstructoffset();
   *dest = *(TDCHit*) libp->para[0].ref;
   const TDCHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ADCHit */
static int G__mydict_532_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ADCHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ADCHit[n];
     } else {
       p = new((void*) gvp) ADCHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ADCHit;
     } else {
       p = new((void*) gvp) ADCHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_ADCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->SetChannel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->SetADC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->SetNHits((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->SetDspSum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->SetDspMean((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->SetDspCfA((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->SetDspCfB((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->SetDspCfT((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->AddSample((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCHit*) G__getstructoffset())->GetChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCHit*) G__getstructoffset())->GetADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCHit*) G__getstructoffset())->GetNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCHit*) G__getstructoffset())->GetSample((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((ADCHit*) G__getstructoffset())->GetSamples());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCHit*) G__getstructoffset())->GetDspSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCHit*) G__getstructoffset())->GetDspMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCHit*) G__getstructoffset())->GetDspCfA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCHit*) G__getstructoffset())->GetDspCfB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCHit*) G__getstructoffset())->GetDspCfT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCHit*) G__getstructoffset())->GetMaxSamples());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ADCHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ADCHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ADCHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ADCHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ADCHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ADCHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ADCHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_532_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ADCHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_532_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ADCHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ADCHit(*(ADCHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_ADCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ADCHit G__TADCHit;
static int G__mydict_532_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ADCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ADCHit*) (soff+(sizeof(ADCHit)*i)))->~G__TADCHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ADCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ADCHit*) (soff))->~G__TADCHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_532_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ADCHit* dest = (ADCHit*) G__getstructoffset();
   *dest = *(ADCHit*) libp->para[0].ref;
   const ADCHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Event */
static int G__mydict_533_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Event[n];
     } else {
       p = new((void*) gvp) Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Event;
     } else {
       p = new((void*) gvp) Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Event*) G__getstructoffset())->AddTDCHit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Event*) G__getstructoffset())->AddADCHit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->SetTDCReferenceTime((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->SetErrorBits((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Event*) G__getstructoffset())->GetTotalNADCHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Event*) G__getstructoffset())->GetTotalNTDCHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Event*) G__getstructoffset())->GetTDCReferenceTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((Event*) G__getstructoffset())->GetErrorBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Event*) G__getstructoffset())->GetTDCHitsArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Event*) G__getstructoffset())->GetADCHitsArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_533_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_533_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Event(*(Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Event G__TEvent;
static int G__mydict_533_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Event*) (soff+(sizeof(Event)*i)))->~G__TEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Event*) (soff))->~G__TEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_533_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* dest = (Event*) G__getstructoffset();
   *dest = *(Event*) libp->para[0].ref;
   const Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* UnpackingModule */
static int G__mydict_534_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UnpackingModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UnpackingModule[n];
     } else {
       p = new((void*) gvp) UnpackingModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UnpackingModule;
     } else {
       p = new((void*) gvp) UnpackingModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_UnpackingModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UnpackingModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new UnpackingModule(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) UnpackingModule(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_UnpackingModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->AddUnpacker(*((string*) G__int(libp->para[0])), (UnpackingModule*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((UnpackingModule*) G__getstructoffset())->GetUnpacker(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->SetBoardType(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->SetBoardAddress(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->SetHubAddress(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->SetChannelNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->SetResolution((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->SetMeasurementType(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->SetInvertBytes((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->SetEntireEventSize((size_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((UnpackingModule*) G__getstructoffset())->GetBoardType();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((UnpackingModule*) G__getstructoffset())->GetBoardAddress();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((UnpackingModule*) G__getstructoffset())->GetHubAddress();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackingModule*) G__getstructoffset())->GetChannelNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackingModule*) G__getstructoffset())->GetChannelOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackingModule*) G__getstructoffset())->GetResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((UnpackingModule*) G__getstructoffset())->GetMeasurementType();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackingModule*) G__getstructoffset())->GetInvertBytes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((UnpackingModule*) G__getstructoffset())->GetEntireEventSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->ProcessEvent((UInt_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->ProcessEvent((UInt_t*) G__int(libp->para[0]), (Event*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->GetADCHits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->GetTDCHits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->SayHi();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((UnpackingModule*) G__getstructoffset())->UIntToString((UInt_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,UnpackingModule*,less<string>,allocator<pair<const string,UnpackingModule*> > >::iterator* pobj;
         map<string,UnpackingModule*,less<string>,allocator<pair<const string,UnpackingModule*> > >::iterator xobj = ((UnpackingModule*) G__getstructoffset())->GetInternalUnpackersIterBegin();
         pobj = new map<string,UnpackingModule*,less<string>,allocator<pair<const string,UnpackingModule*> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,UnpackingModule*,less<string>,allocator<pair<const string,UnpackingModule*> > >::iterator* pobj;
         map<string,UnpackingModule*,less<string>,allocator<pair<const string,UnpackingModule*> > >::iterator xobj = ((UnpackingModule*) G__getstructoffset())->GetInternalUnpackersIterEnd();
         pobj = new map<string,UnpackingModule*,less<string>,allocator<pair<const string,UnpackingModule*> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((UnpackingModule*) G__getstructoffset())->GetLeadTime((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((UnpackingModule*) G__getstructoffset())->GetLeadMult((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((UnpackingModule*) G__getstructoffset())->GetTrailTime((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((UnpackingModule*) G__getstructoffset())->GetTrailMult((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->SetReferenceChannel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((UnpackingModule*) G__getstructoffset())->GetFirstLeadCorrect((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((UnpackingModule*) G__getstructoffset())->GetFineTime((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((UnpackingModule*) G__getstructoffset())->GetCoarseTime((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((UnpackingModule*) G__getstructoffset())->GetErrorBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackingModule*) G__getstructoffset())->GetSample((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackingModule*) G__getstructoffset())->GetDspSum((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackingModule*) G__getstructoffset())->GetDspMean((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackingModule*) G__getstructoffset())->GetDspCfA((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackingModule*) G__getstructoffset())->GetDspCfB((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackingModule*) G__getstructoffset())->GetDspCfT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((UnpackingModule*) G__getstructoffset())->GetNumberOfSamples());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((UnpackingModule*) G__getstructoffset())->ReverseHex((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) UnpackingModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UnpackingModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) UnpackingModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      UnpackingModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UnpackingModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UnpackingModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UnpackingModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UnpackingModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_534_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UnpackingModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_534_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   UnpackingModule* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new UnpackingModule(*(UnpackingModule*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_UnpackingModule));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef UnpackingModule G__TUnpackingModule;
static int G__mydict_534_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (UnpackingModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((UnpackingModule*) (soff+(sizeof(UnpackingModule)*i)))->~G__TUnpackingModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (UnpackingModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((UnpackingModule*) (soff))->~G__TUnpackingModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_534_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UnpackingModule* dest = (UnpackingModule*) G__getstructoffset();
   *dest = *(UnpackingModule*) libp->para[0].ref;
   const UnpackingModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Unpacker2 */
static int G__mydict_542_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Unpacker2(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) Unpacker2(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker2*) G__getstructoffset())->ParseConfigFile(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker2*) G__getstructoffset())->DistributeEvents(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker2*) G__getstructoffset())->AddUnpacker(*((string*) G__int(libp->para[0])), (UnpackingModule*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Unpacker2*) G__getstructoffset())->GetUnpacker(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const Unpacker2*) G__getstructoffset())->getSubHdrSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const Unpacker2*) G__getstructoffset())->getHdrSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const Unpacker2*) G__getstructoffset())->getFullSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((Unpacker2*) G__getstructoffset())->getDataSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((Unpacker2*) G__getstructoffset())->getHubAddress();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const Unpacker2*) G__getstructoffset())->getDataLen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const Unpacker2*) G__getstructoffset())->align8((const size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((Unpacker2*) G__getstructoffset())->getPaddedSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((Unpacker2*) G__getstructoffset())->getPaddedEventSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((Unpacker2*) G__getstructoffset())->ReverseHex((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Unpacker2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Unpacker2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Unpacker2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_542_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_542_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Unpacker2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Unpacker2(*(Unpacker2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Unpacker2 G__TUnpacker2;
static int G__mydict_542_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Unpacker2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Unpacker2*) (soff+(sizeof(Unpacker2)*i)))->~G__TUnpacker2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Unpacker2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Unpacker2*) (soff))->~G__TUnpacker2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_542_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker2* dest = (Unpacker2*) G__getstructoffset();
   *dest = *(Unpacker2*) libp->para[0].ref;
   const Unpacker2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Unpacker_HPTDC_HR */
static int G__mydict_545_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_HPTDC_HR* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_HPTDC_HR[n];
     } else {
       p = new((void*) gvp) Unpacker_HPTDC_HR[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_HPTDC_HR;
     } else {
       p = new((void*) gvp) Unpacker_HPTDC_HR;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_545_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_HPTDC_HR* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Unpacker_HPTDC_HR(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) Unpacker_HPTDC_HR(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_545_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Unpacker_HPTDC_HR::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_545_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_HPTDC_HR::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_545_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Unpacker_HPTDC_HR::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_545_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Unpacker_HPTDC_HR::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_545_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_HPTDC_HR*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_545_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_HPTDC_HR::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_545_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_HPTDC_HR::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_545_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_HPTDC_HR::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_545_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_HPTDC_HR::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_545_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Unpacker_HPTDC_HR* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Unpacker_HPTDC_HR(*(Unpacker_HPTDC_HR*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Unpacker_HPTDC_HR G__TUnpacker_HPTDC_HR;
static int G__mydict_545_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Unpacker_HPTDC_HR*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Unpacker_HPTDC_HR*) (soff+(sizeof(Unpacker_HPTDC_HR)*i)))->~G__TUnpacker_HPTDC_HR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Unpacker_HPTDC_HR*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Unpacker_HPTDC_HR*) (soff))->~G__TUnpacker_HPTDC_HR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_545_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_HPTDC_HR* dest = (Unpacker_HPTDC_HR*) G__getstructoffset();
   *dest = *(Unpacker_HPTDC_HR*) libp->para[0].ref;
   const Unpacker_HPTDC_HR& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Unpacker_HPTDC_VHR */
static int G__mydict_547_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_HPTDC_VHR* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_HPTDC_VHR[n];
     } else {
       p = new((void*) gvp) Unpacker_HPTDC_VHR[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_HPTDC_VHR;
     } else {
       p = new((void*) gvp) Unpacker_HPTDC_VHR;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_HPTDC_VHR* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Unpacker_HPTDC_VHR(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) Unpacker_HPTDC_VHR(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_HPTDC_VHR*) G__getstructoffset())->SetInlCorrection((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Unpacker_HPTDC_VHR::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_HPTDC_VHR::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Unpacker_HPTDC_VHR::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Unpacker_HPTDC_VHR::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_HPTDC_VHR*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_HPTDC_VHR::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_HPTDC_VHR::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_HPTDC_VHR::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_547_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_HPTDC_VHR::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_547_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Unpacker_HPTDC_VHR* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Unpacker_HPTDC_VHR(*(Unpacker_HPTDC_VHR*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Unpacker_HPTDC_VHR G__TUnpacker_HPTDC_VHR;
static int G__mydict_547_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Unpacker_HPTDC_VHR*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Unpacker_HPTDC_VHR*) (soff+(sizeof(Unpacker_HPTDC_VHR)*i)))->~G__TUnpacker_HPTDC_VHR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Unpacker_HPTDC_VHR*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Unpacker_HPTDC_VHR*) (soff))->~G__TUnpacker_HPTDC_VHR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_547_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_HPTDC_VHR* dest = (Unpacker_HPTDC_VHR*) G__getstructoffset();
   *dest = *(Unpacker_HPTDC_VHR*) libp->para[0].ref;
   const Unpacker_HPTDC_VHR& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Unpacker_HUB2 */
static int G__mydict_548_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_HUB2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_HUB2[n];
     } else {
       p = new((void*) gvp) Unpacker_HUB2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_HUB2;
     } else {
       p = new((void*) gvp) Unpacker_HUB2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_548_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_HUB2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Unpacker_HUB2(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) Unpacker_HUB2(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_548_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Unpacker_HUB2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_548_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_HUB2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_548_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Unpacker_HUB2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_548_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Unpacker_HUB2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_548_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_HUB2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_548_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_HUB2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_548_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_HUB2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_548_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_HUB2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_548_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_HUB2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_548_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Unpacker_HUB2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Unpacker_HUB2(*(Unpacker_HUB2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Unpacker_HUB2 G__TUnpacker_HUB2;
static int G__mydict_548_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Unpacker_HUB2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Unpacker_HUB2*) (soff+(sizeof(Unpacker_HUB2)*i)))->~G__TUnpacker_HUB2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Unpacker_HUB2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Unpacker_HUB2*) (soff))->~G__TUnpacker_HUB2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_548_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_HUB2* dest = (Unpacker_HUB2*) G__getstructoffset();
   *dest = *(Unpacker_HUB2*) libp->para[0].ref;
   const Unpacker_HUB2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Unpacker_TRB2 */
static int G__mydict_549_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_TRB2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_TRB2[n];
     } else {
       p = new((void*) gvp) Unpacker_TRB2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_TRB2;
     } else {
       p = new((void*) gvp) Unpacker_TRB2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_549_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_TRB2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Unpacker_TRB2(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) Unpacker_TRB2(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_549_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Unpacker_TRB2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_549_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_TRB2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_549_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Unpacker_TRB2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_549_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Unpacker_TRB2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_549_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_TRB2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_549_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_TRB2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_549_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_TRB2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_549_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_TRB2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_549_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_TRB2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_549_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Unpacker_TRB2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Unpacker_TRB2(*(Unpacker_TRB2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Unpacker_TRB2 G__TUnpacker_TRB2;
static int G__mydict_549_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Unpacker_TRB2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Unpacker_TRB2*) (soff+(sizeof(Unpacker_TRB2)*i)))->~G__TUnpacker_TRB2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Unpacker_TRB2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Unpacker_TRB2*) (soff))->~G__TUnpacker_TRB2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_549_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_TRB2* dest = (Unpacker_TRB2*) G__getstructoffset();
   *dest = *(Unpacker_TRB2*) libp->para[0].ref;
   const Unpacker_TRB2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Unpacker_Shower */
static int G__mydict_550_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_Shower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_Shower[n];
     } else {
       p = new((void*) gvp) Unpacker_Shower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_Shower;
     } else {
       p = new((void*) gvp) Unpacker_Shower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_550_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_Shower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Unpacker_Shower(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) Unpacker_Shower(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_550_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Unpacker_Shower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_550_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_Shower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_550_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Unpacker_Shower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_550_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Unpacker_Shower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_550_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_Shower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_550_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_Shower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_550_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_Shower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_550_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_Shower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_550_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_Shower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_550_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Unpacker_Shower* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Unpacker_Shower(*(Unpacker_Shower*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Unpacker_Shower G__TUnpacker_Shower;
static int G__mydict_550_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Unpacker_Shower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Unpacker_Shower*) (soff+(sizeof(Unpacker_Shower)*i)))->~G__TUnpacker_Shower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Unpacker_Shower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Unpacker_Shower*) (soff))->~G__TUnpacker_Shower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_550_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_Shower* dest = (Unpacker_Shower*) G__getstructoffset();
   *dest = *(Unpacker_Shower*) libp->para[0].ref;
   const Unpacker_Shower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Unpacker_Ecal_ADC */
static int G__mydict_551_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_Ecal_ADC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_Ecal_ADC[n];
     } else {
       p = new((void*) gvp) Unpacker_Ecal_ADC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_Ecal_ADC;
     } else {
       p = new((void*) gvp) Unpacker_Ecal_ADC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_Ecal_ADC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Unpacker_Ecal_ADC(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) Unpacker_Ecal_ADC(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_Ecal_ADC*) G__getstructoffset())->AddSample((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_Ecal_ADC*) G__getstructoffset())->SetDspSum((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_Ecal_ADC*) G__getstructoffset())->SetDspMean((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_Ecal_ADC*) G__getstructoffset())->SetDspCfA((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_Ecal_ADC*) G__getstructoffset())->SetDspCfB((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_Ecal_ADC*) G__getstructoffset())->SetDspCfT((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Unpacker_Ecal_ADC*) G__getstructoffset())->GetSample((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Unpacker_Ecal_ADC*) G__getstructoffset())->GetDspSum((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Unpacker_Ecal_ADC*) G__getstructoffset())->GetDspMean((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Unpacker_Ecal_ADC*) G__getstructoffset())->GetDspCfA((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Unpacker_Ecal_ADC*) G__getstructoffset())->GetDspCfB((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Unpacker_Ecal_ADC*) G__getstructoffset())->GetDspCfT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Unpacker_Ecal_ADC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_Ecal_ADC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Unpacker_Ecal_ADC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Unpacker_Ecal_ADC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_Ecal_ADC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_Ecal_ADC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_Ecal_ADC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_Ecal_ADC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_551_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_Ecal_ADC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_551_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Unpacker_Ecal_ADC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Unpacker_Ecal_ADC(*(Unpacker_Ecal_ADC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Unpacker_Ecal_ADC G__TUnpacker_Ecal_ADC;
static int G__mydict_551_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Unpacker_Ecal_ADC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Unpacker_Ecal_ADC*) (soff+(sizeof(Unpacker_Ecal_ADC)*i)))->~G__TUnpacker_Ecal_ADC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Unpacker_Ecal_ADC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Unpacker_Ecal_ADC*) (soff))->~G__TUnpacker_Ecal_ADC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_551_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_Ecal_ADC* dest = (Unpacker_Ecal_ADC*) G__getstructoffset();
   *dest = *(Unpacker_Ecal_ADC*) libp->para[0].ref;
   const Unpacker_Ecal_ADC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Unpacker_TRB3 */
static int G__mydict_552_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_TRB3* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_TRB3[n];
     } else {
       p = new((void*) gvp) Unpacker_TRB3[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_TRB3;
     } else {
       p = new((void*) gvp) Unpacker_TRB3;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_552_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_TRB3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Unpacker_TRB3(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) Unpacker_TRB3(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_552_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Unpacker_TRB3::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_552_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_TRB3::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_552_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Unpacker_TRB3::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_552_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Unpacker_TRB3::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_552_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_TRB3*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_552_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_TRB3::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_552_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_TRB3::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_552_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_TRB3::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_552_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_TRB3::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_552_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Unpacker_TRB3* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Unpacker_TRB3(*(Unpacker_TRB3*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Unpacker_TRB3 G__TUnpacker_TRB3;
static int G__mydict_552_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Unpacker_TRB3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Unpacker_TRB3*) (soff+(sizeof(Unpacker_TRB3)*i)))->~G__TUnpacker_TRB3();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Unpacker_TRB3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Unpacker_TRB3*) (soff))->~G__TUnpacker_TRB3();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_552_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_TRB3* dest = (Unpacker_TRB3*) G__getstructoffset();
   *dest = *(Unpacker_TRB3*) libp->para[0].ref;
   const Unpacker_TRB3& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Unpacker_Lattice_TDC */
static int G__mydict_574_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_Lattice_TDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_Lattice_TDC[n];
     } else {
       p = new((void*) gvp) Unpacker_Lattice_TDC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Unpacker_Lattice_TDC;
     } else {
       p = new((void*) gvp) Unpacker_Lattice_TDC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_574_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_Lattice_TDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Unpacker_Lattice_TDC(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]), *((string*) G__int(libp->para[9])));
   } else {
     p = new((void*) gvp) Unpacker_Lattice_TDC(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, *((string*) G__int(libp->para[6])), (bool) G__int(libp->para[7])
, (bool) G__int(libp->para[8]), *((string*) G__int(libp->para[9])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_574_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Unpacker_Lattice_TDC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_574_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_Lattice_TDC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_574_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Unpacker_Lattice_TDC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_574_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Unpacker_Lattice_TDC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_574_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Unpacker_Lattice_TDC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_574_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_Lattice_TDC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_574_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_Lattice_TDC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_574_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Unpacker_Lattice_TDC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_574_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Unpacker_Lattice_TDC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_574_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Unpacker_Lattice_TDC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Unpacker_Lattice_TDC(*(Unpacker_Lattice_TDC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Unpacker_Lattice_TDC G__TUnpacker_Lattice_TDC;
static int G__mydict_574_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Unpacker_Lattice_TDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Unpacker_Lattice_TDC*) (soff+(sizeof(Unpacker_Lattice_TDC)*i)))->~G__TUnpacker_Lattice_TDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Unpacker_Lattice_TDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Unpacker_Lattice_TDC*) (soff))->~G__TUnpacker_Lattice_TDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_574_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Unpacker_Lattice_TDC* dest = (Unpacker_Lattice_TDC*) G__getstructoffset();
   *dest = *(Unpacker_Lattice_TDC*) libp->para[0].ref;
   const Unpacker_Lattice_TDC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TDCHit */

/* ADCHit */

/* Event */

/* UnpackingModule */

/* Unpacker2 */

/* Unpacker_HPTDC_HR */

/* Unpacker_HPTDC_VHR */

/* Unpacker_HUB2 */

/* Unpacker_TRB2 */

/* Unpacker_Shower */

/* Unpacker_Ecal_ADC */

/* Unpacker_TRB3 */

/* Unpacker_Lattice_TDC */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncmydict {
 public:
  G__Sizep2memfuncmydict(): p(&G__Sizep2memfuncmydict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncmydict::*p)();
};

size_t G__get_sizep2memfuncmydict()
{
  G__Sizep2memfuncmydict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancemydict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_TDCHit))) {
     TDCHit *G__Lderived;
     G__Lderived=(TDCHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_TDCHit),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_ADCHit))) {
     ADCHit *G__Lderived;
     G__Lderived=(ADCHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_ADCHit),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_Event))) {
     Event *G__Lderived;
     G__Lderived=(Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Event),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_UnpackingModule))) {
     UnpackingModule *G__Lderived;
     G__Lderived=(UnpackingModule*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_UnpackingModule),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_Unpacker2))) {
     Unpacker2 *G__Lderived;
     G__Lderived=(Unpacker2*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker2),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR))) {
     Unpacker_HPTDC_HR *G__Lderived;
     G__Lderived=(Unpacker_HPTDC_HR*)0x1000;
     {
       UnpackingModule *G__Lpbase=(UnpackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR),G__get_linked_tagnum(&G__mydictLN_UnpackingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR))) {
     Unpacker_HPTDC_VHR *G__Lderived;
     G__Lderived=(Unpacker_HPTDC_VHR*)0x1000;
     {
       UnpackingModule *G__Lpbase=(UnpackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR),G__get_linked_tagnum(&G__mydictLN_UnpackingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2))) {
     Unpacker_HUB2 *G__Lderived;
     G__Lderived=(Unpacker_HUB2*)0x1000;
     {
       UnpackingModule *G__Lpbase=(UnpackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2),G__get_linked_tagnum(&G__mydictLN_UnpackingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2))) {
     Unpacker_TRB2 *G__Lderived;
     G__Lderived=(Unpacker_TRB2*)0x1000;
     {
       UnpackingModule *G__Lpbase=(UnpackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2),G__get_linked_tagnum(&G__mydictLN_UnpackingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower))) {
     Unpacker_Shower *G__Lderived;
     G__Lderived=(Unpacker_Shower*)0x1000;
     {
       UnpackingModule *G__Lpbase=(UnpackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower),G__get_linked_tagnum(&G__mydictLN_UnpackingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC))) {
     Unpacker_Ecal_ADC *G__Lderived;
     G__Lderived=(Unpacker_Ecal_ADC*)0x1000;
     {
       UnpackingModule *G__Lpbase=(UnpackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC),G__get_linked_tagnum(&G__mydictLN_UnpackingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3))) {
     Unpacker_TRB3 *G__Lderived;
     G__Lderived=(Unpacker_TRB3*)0x1000;
     {
       UnpackingModule *G__Lpbase=(UnpackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3),G__get_linked_tagnum(&G__mydictLN_UnpackingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC))) {
     Unpacker_Lattice_TDC *G__Lderived;
     G__Lderived=(Unpacker_Lattice_TDC*)0x1000;
     {
       UnpackingModule *G__Lpbase=(UnpackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC),G__get_linked_tagnum(&G__mydictLN_UnpackingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC),G__get_linked_tagnum(&G__mydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablemydict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__mydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__mydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__mydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__mydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__mydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__mydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__mydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__mydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__mydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__mydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__mydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__mydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__mydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__mydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__mydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__mydictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__mydictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__mydictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__mydictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,UnpackingModule*>",117,G__get_linked_tagnum(&G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,UnpackingModule*>",117,G__get_linked_tagnum(&G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,UnpackingModule*>",117,G__get_linked_tagnum(&G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,UnpackingModule*,less<string> >",117,G__get_linked_tagnum(&G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__mydictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__mydictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TDCHit */
static void G__setup_memvarTDCHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_TDCHit));
   { TDCHit *p; p=(TDCHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fineTime1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"coarseTime1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fineTimes[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"coarseTimes[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"leadTime1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"trailTime1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"leadTimes[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"trailTimes[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"leadsNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trailsNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"finesNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"coarsesNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ADCHit */
static void G__setup_memvarADCHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_ADCHit));
   { ADCHit *p; p=(ADCHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"samples[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dspSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dspMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dspCfA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dspCfB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dspCfT=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"localPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Event */
static void G__setup_memvarEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_Event));
   { Event *p; p=(Event*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"totalNTDCHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"totalNADCHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"TDCReferenceTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"errorBits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TDCHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__mydictLN_TClonesArray),-1,-1,1,"TDCHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ADCHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__mydictLN_TClonesArray),-1,-1,1,"ADCHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* UnpackingModule */
static void G__setup_memvarUnpackingModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_UnpackingModule));
   { UnpackingModule *p; p=(UnpackingModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_string),-1,-1,4,"boardType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_string),-1,-1,4,"boardAddress=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_string),-1,-1,4,"hubAddress=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"channelNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"channelOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"resolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_string),-1,-1,4,"measurementType=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("size_t"),-1,4,"entireEventSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"invertBytes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgR),G__defined_typename("map<std::string,UnpackingModule*>"),-1,4,"internalUnpackers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->debugMode)-(long)(p)),103,0,0,-1,-1,-1,1,"debugMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Unpacker2 */
static void G__setup_memvarUnpacker2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker2));
   { Unpacker2 *p; p=(Unpacker2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgR),G__defined_typename("map<std::string,UnpackingModule*>"),-1,4,"unpackers=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"eventsToAnalyze=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"invertBytes=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fullSetup=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"debugMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fileSize=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hdr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__mydictLN_Unpacker2cLcLEventHdr),-1,-1,1,"hdr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->subHdr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__mydictLN_Unpacker2cLcLSubEventHdr),-1,-1,1,"subHdr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pHdr)-(long)(p)),72,0,0,-1,G__defined_typename("UInt_t"),-1,1,"pHdr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->subPHdr)-(long)(p)),72,0,0,-1,G__defined_typename("UInt_t"),-1,1,"subPHdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Unpacker_HPTDC_HR */
static void G__setup_memvarUnpacker_HPTDC_HR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR));
   { Unpacker_HPTDC_HR *p; p=(Unpacker_HPTDC_HR*)0x1000; if (p) { }
   G__memvar_setup((void*)0,70,2,0,-1,-1,-1,4,"leadTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,2,0,-1,-1,-1,4,"trailTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"leadMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"trailMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"channelNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,71,0,0,-1,-1,-1,4,"firstLeadCorrect=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Unpacker_HPTDC_VHR */
static void G__setup_memvarUnpacker_HPTDC_VHR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR));
   { Unpacker_HPTDC_VHR *p; p=(Unpacker_HPTDC_VHR*)0x1000; if (p) { }
   G__memvar_setup((void*)0,70,2,0,-1,-1,-1,4,"leadTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,2,0,-1,-1,-1,4,"trailTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"leadMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"trailMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"channelNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useInlCorrections=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_InlCorrector),-1,-1,4,"inlCorrector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Unpacker_HUB2 */
static void G__setup_memvarUnpacker_HUB2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2));
   { Unpacker_HUB2 *p; p=(Unpacker_HUB2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_Event),-1,-1,4,"event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Unpacker_TRB2 */
static void G__setup_memvarUnpacker_TRB2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2));
   { Unpacker_TRB2 *p; p=(Unpacker_TRB2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_Event),-1,-1,4,"event=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"referenceChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Unpacker_Shower */
static void G__setup_memvarUnpacker_Shower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower));
   { Unpacker_Shower *p; p=(Unpacker_Shower*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_Event),-1,-1,4,"event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Unpacker_Ecal_ADC */
static void G__setup_memvarUnpacker_Ecal_ADC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC));
   { Unpacker_Ecal_ADC *p; p=(Unpacker_Ecal_ADC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_Event),-1,-1,4,"event=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->samples)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"samples[8][128]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dspSums)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dspSums[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dspMeans)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dspMeans[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dspCfA)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dspCfA[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dspCfB)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dspCfB[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dspCfT)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dspCfT[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Unpacker_TRB3 */
static void G__setup_memvarUnpacker_TRB3(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3));
   { Unpacker_TRB3 *p; p=(Unpacker_TRB3*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_Event),-1,-1,4,"event=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"referenceChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Unpacker_Lattice_TDC */
static void G__setup_memvarUnpacker_Lattice_TDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC));
   { Unpacker_Lattice_TDC *p; p=(Unpacker_Lattice_TDC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,70,2,0,-1,-1,-1,4,"leadTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,2,0,-1,-1,-1,4,"trailTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"leadMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"trailMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,2,0,-1,-1,-1,4,"fineTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,2,0,-1,-1,-1,4,"coarseTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"channelNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"offset=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__mydictLN_TH1F),-1,-1,4,"corrections=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useCorrections=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"errorBits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarmydict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTDCHit(void) {
   /* TDCHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_TDCHit));
   G__memfunc_setup("TDCHit",512,G__mydict_531_0_1, 105, G__get_linked_tagnum(&G__mydictLN_TDCHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannel",997,G__mydict_531_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLeadTime",1038,G__mydict_531_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrailTime",1172,G__mydict_531_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTot",576,G__mydict_531_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFineTime",1050,G__mydict_531_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Ftime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCoarseTime",1269,G__mydict_531_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Ctime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannel",985,G__mydict_531_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeadTime1",1110,G__mydict_531_0_9, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrailTime1",1244,G__mydict_531_0_10, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFineTime1",1122,G__mydict_531_0_11, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoarseTime1",1341,G__mydict_531_0_12, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeadsNum",1081,G__mydict_531_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrailsNum",1215,G__mydict_531_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeadTime",1061,G__mydict_531_0_15, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrailTime",1195,G__mydict_531_0_16, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFineTime",1073,G__mydict_531_0_17, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoarseTime",1292,G__mydict_531_0_18, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTot",599,G__mydict_531_0_19, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__mydict_531_0_20, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDCHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_531_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDCHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_531_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDCHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_531_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDCHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_531_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_531_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDCHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_531_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDCHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_531_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDCHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_531_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDCHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TDCHit", 512, G__mydict_531_0_32, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_TDCHit), -1, 0, 1, 1, 1, 0, "u 'TDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TDCHit", 638, G__mydict_531_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_531_0_34, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_TDCHit), -1, 1, 1, 1, 1, 0, "u 'TDCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncADCHit(void) {
   /* ADCHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_ADCHit));
   G__memfunc_setup("ADCHit",493,G__mydict_532_0_1, 105, G__get_linked_tagnum(&G__mydictLN_ADCHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannel",997,G__mydict_532_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetADC",500,G__mydict_532_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNHits",786,G__mydict_532_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDspSum",904,G__mydict_532_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDspMean",980,G__mydict_532_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDspCfA",829,G__mydict_532_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDspCfB",830,G__mydict_532_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDspCfT",848,G__mydict_532_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSample",875,G__mydict_532_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannel",985,G__mydict_532_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__mydict_532_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__mydict_532_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSample",898,G__mydict_532_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSamples",1013,G__mydict_532_0_15, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDspSum",892,G__mydict_532_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDspMean",968,G__mydict_532_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDspCfA",817,G__mydict_532_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDspCfB",818,G__mydict_532_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDspCfT",836,G__mydict_532_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxSamples",1307,G__mydict_532_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__mydict_532_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__mydict_532_0_23, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ADCHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_532_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ADCHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_532_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ADCHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_532_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ADCHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_532_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_532_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ADCHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_532_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ADCHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_532_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ADCHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_532_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ADCHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ADCHit", 493, G__mydict_532_0_35, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_ADCHit), -1, 0, 1, 1, 1, 0, "u 'ADCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ADCHit", 619, G__mydict_532_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_532_0_37, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_ADCHit), -1, 1, 1, 1, 1, 0, "u 'ADCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvent(void) {
   /* Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_Event));
   G__memfunc_setup("Event",514,G__mydict_533_0_1, 105, G__get_linked_tagnum(&G__mydictLN_Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTDCHit",777,G__mydict_533_0_2, 85, G__get_linked_tagnum(&G__mydictLN_TDCHit), -1, 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddADCHit",758,G__mydict_533_0_3, 85, G__get_linked_tagnum(&G__mydictLN_ADCHit), -1, 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCReferenceTime",1829,G__mydict_533_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetErrorBits",1224,G__mydict_533_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalNADCHits",1490,G__mydict_533_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalNTDCHits",1509,G__mydict_533_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCReferenceTime",1817,G__mydict_533_0_8, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetErrorBits",1212,G__mydict_533_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCHitsArray",1426,G__mydict_533_0_10, 85, G__get_linked_tagnum(&G__mydictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCHitsArray",1407,G__mydict_533_0_11, 85, G__get_linked_tagnum(&G__mydictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__mydict_533_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__mydict_533_0_13, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_533_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_533_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_533_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_533_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_533_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_533_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_533_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_533_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Event", 514, G__mydict_533_0_25, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_Event), -1, 0, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Event", 640, G__mydict_533_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_533_0_27, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_Event), -1, 1, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpackingModule(void) {
   /* UnpackingModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_UnpackingModule));
   G__memfunc_setup("UnpackingModule",1542,G__mydict_534_0_1, 105, G__get_linked_tagnum(&G__mydictLN_UnpackingModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnpackingModule",1542,G__mydict_534_0_2, 105, G__get_linked_tagnum(&G__mydictLN_UnpackingModule), -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - bT u 'string' - 0 - bA "
"u 'string' - 0 - hA i - - 0 - cN "
"i - - 0 - o i - - 0 - r "
"u 'string' - 0 - mR g - - 0 - dec "
"g - - 0 - dbg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddUnpacker",1090,G__mydict_534_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - s U 'UnpackingModule' - 0 - u", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnpacker",1113,G__mydict_534_0_4, 85, G__get_linked_tagnum(&G__mydictLN_UnpackingModule), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBoardType",1206,G__mydict_534_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBoardAddress",1498,G__mydict_534_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHubAddress",1297,G__mydict_534_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelNumber",1614,G__mydict_534_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetResolution",1376,G__mydict_534_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMeasurementType",1876,G__mydict_534_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInvertBytes",1451,G__mydict_534_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - dec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEntireEventSize",1840,G__mydict_534_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBoardType",1194,G__mydict_534_0_13, 117, G__get_linked_tagnum(&G__mydictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBoardAddress",1486,G__mydict_534_0_14, 117, G__get_linked_tagnum(&G__mydictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHubAddress",1285,G__mydict_534_0_15, 117, G__get_linked_tagnum(&G__mydictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelNumber",1602,G__mydict_534_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelOffset",1600,G__mydict_534_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResolution",1364,G__mydict_534_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMeasurementType",1864,G__mydict_534_0_19, 117, G__get_linked_tagnum(&G__mydictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInvertBytes",1439,G__mydict_534_0_20, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntireEventSize",1828,G__mydict_534_0_21, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,G__mydict_534_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "H - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessEvent",1249,G__mydict_534_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"H - 'UInt_t' 0 - data U 'Event' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetADCHits",896,G__mydict_534_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCHits",915,G__mydict_534_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SayHi",478,G__mydict_534_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,G__mydict_534_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UIntToString",1210,G__mydict_534_0_28, 117, G__get_linked_tagnum(&G__mydictLN_string), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInternalUnpackersIterBegin",2946,G__mydict_534_0_29, 117, G__get_linked_tagnum(&G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInternalUnpackersIterEnd",2740,G__mydict_534_0_30, 117, G__get_linked_tagnum(&G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeadTime",1061,G__mydict_534_0_31, 102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeadMult",1080,G__mydict_534_0_32, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrailTime",1195,G__mydict_534_0_33, 102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrailMult",1214,G__mydict_534_0_34, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetReferenceChannel",1908,G__mydict_534_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFirstLeadCorrect",1904,G__mydict_534_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFineTime",1073,G__mydict_534_0_37, 102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCoarseTime",1292,G__mydict_534_0_38, 102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetErrorBits",1212,G__mydict_534_0_39, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSample",898,G__mydict_534_0_40, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - channel i - 'Int_t' 0 - sampleNr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDspSum",892,G__mydict_534_0_41, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDspMean",968,G__mydict_534_0_42, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDspCfA",817,G__mydict_534_0_43, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDspCfB",818,G__mydict_534_0_44, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDspCfT",836,G__mydict_534_0_45, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfSamples",1811,G__mydict_534_0_46, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReverseHex",1025,G__mydict_534_0_47, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__mydict_534_0_48, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&UnpackingModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_534_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UnpackingModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_534_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&UnpackingModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_534_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&UnpackingModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_534_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_534_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UnpackingModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_534_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UnpackingModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_534_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UnpackingModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_534_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UnpackingModule::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("UnpackingModule", 1542, G__mydict_534_0_60, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_UnpackingModule), -1, 0, 1, 1, 1, 0, "u 'UnpackingModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UnpackingModule", 1668, G__mydict_534_0_61, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_534_0_62, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_UnpackingModule), -1, 1, 1, 1, 1, 0, "u 'UnpackingModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpacker2(void) {
   /* Unpacker2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker2));
   G__memfunc_setup("reverseHex",1057,(G__InterfaceMethod) NULL, 107, -1, G__defined_typename("size_t"), 0, 1, 1, 4, 0, "k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unpacker2",875,G__mydict_542_0_2, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker2), -1, 0, 3, 1, 1, 0, 
"C - - 10 - hldFile C - - 10 - configFile "
"i - - 0 - numberOfEvents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseConfigFile",1489,G__mydict_542_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - f u 'string' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DistributeEvents",1684,G__mydict_542_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddUnpacker",1090,G__mydict_542_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - s U 'UnpackingModule' - 0 - u", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUnpacker",1113,G__mydict_542_0_6, 85, G__get_linked_tagnum(&G__mydictLN_UnpackingModule), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSubHdrSize",1315,G__mydict_542_0_7, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHdrSize",1017,G__mydict_542_0_8, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFullSize",1134,G__mydict_542_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDataSize",1109,G__mydict_542_0_10, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHubAddress",1317,G__mydict_542_0_11, 117, G__get_linked_tagnum(&G__mydictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDataLen",985,G__mydict_542_0_12, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("align8",579,G__mydict_542_0_13, 107, -1, G__defined_typename("size_t"), 0, 1, 1, 1, 8, "k - 'size_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPaddedSize",1309,G__mydict_542_0_14, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPaddedEventSize",1823,G__mydict_542_0_15, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReverseHex",1025,G__mydict_542_0_16, 107, -1, G__defined_typename("size_t"), 0, 1, 1, 1, 0, "k - 'size_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__mydict_542_0_17, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Unpacker2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_542_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_542_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Unpacker2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_542_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Unpacker2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_542_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_542_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_542_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_542_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_542_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Unpacker2", 875, G__mydict_542_0_29, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_Unpacker2), -1, 0, 1, 1, 1, 0, "u 'Unpacker2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Unpacker2", 1001, G__mydict_542_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_542_0_31, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_Unpacker2), -1, 1, 1, 1, 1, 0, "u 'Unpacker2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpacker_HPTDC_HR(void) {
   /* Unpacker_HPTDC_HR */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR));
   G__memfunc_setup("Unpacker_HPTDC_HR",1540,G__mydict_545_0_1, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unpacker_HPTDC_HR",1540,G__mydict_545_0_2, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR), -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - bT u 'string' - 0 - bA "
"u 'string' - 0 - hA i - - 0 - cN "
"i - - 0 - o i - - 0 - r "
"u 'string' - 0 - mR g - - 0 - dec "
"g - - 0 - dbg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "H - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SayHi",478,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeadTime",1061,(G__InterfaceMethod) NULL,102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeadMult",1080,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrailTime",1195,(G__InterfaceMethod) NULL,102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrailMult",1214,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFirstLeadCorrect",1904,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__mydict_545_0_11, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Unpacker_HPTDC_HR::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_545_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_HPTDC_HR::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_545_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Unpacker_HPTDC_HR::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_545_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Unpacker_HPTDC_HR::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_545_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_545_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_HPTDC_HR::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_545_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_HPTDC_HR::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_545_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_HPTDC_HR::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_545_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_HPTDC_HR::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Unpacker_HPTDC_HR", 1540, G__mydict_545_0_23, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR), -1, 0, 1, 1, 1, 0, "u 'Unpacker_HPTDC_HR' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Unpacker_HPTDC_HR", 1666, G__mydict_545_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_545_0_25, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_HR), -1, 1, 1, 1, 1, 0, "u 'Unpacker_HPTDC_HR' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpacker_HPTDC_VHR(void) {
   /* Unpacker_HPTDC_VHR */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR));
   G__memfunc_setup("Unpacker_HPTDC_VHR",1626,G__mydict_547_0_1, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unpacker_HPTDC_VHR",1626,G__mydict_547_0_2, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR), -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - bT u 'string' - 0 - bA "
"u 'string' - 0 - hA i - - 0 - cN "
"i - - 0 - o i - - 0 - r "
"u 'string' - 0 - mR g - - 0 - dec "
"g - - 0 - dbg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "H - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SayHi",478,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeadTime",1061,(G__InterfaceMethod) NULL,102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeadMult",1080,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrailTime",1195,(G__InterfaceMethod) NULL,102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrailMult",1214,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInlCorrection",1639,G__mydict_547_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - correctionsFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__mydict_547_0_11, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Unpacker_HPTDC_VHR::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_547_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_HPTDC_VHR::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_547_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Unpacker_HPTDC_VHR::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_547_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Unpacker_HPTDC_VHR::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_547_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_547_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_HPTDC_VHR::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_547_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_HPTDC_VHR::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_547_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_HPTDC_VHR::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_547_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_HPTDC_VHR::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Unpacker_HPTDC_VHR", 1626, G__mydict_547_0_23, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR), -1, 0, 1, 1, 1, 0, "u 'Unpacker_HPTDC_VHR' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Unpacker_HPTDC_VHR", 1752, G__mydict_547_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_547_0_25, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_Unpacker_HPTDC_VHR), -1, 1, 1, 1, 1, 0, "u 'Unpacker_HPTDC_VHR' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpacker_HUB2(void) {
   /* Unpacker_HUB2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2));
   G__memfunc_setup("Unpacker_HUB2",1193,G__mydict_548_0_1, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unpacker_HUB2",1193,G__mydict_548_0_2, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2), -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - bT u 'string' - 0 - bA "
"u 'string' - 0 - hA i - - 0 - cN "
"i - - 0 - o i - - 0 - r "
"u 'string' - 0 - mR g - - 0 - dec "
"g - - 0 - dbg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"H - 'UInt_t' 0 - data U 'Event' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetADCHits",896,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCHits",915,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SayHi",478,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__mydict_548_0_8, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Unpacker_HUB2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_548_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_HUB2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_548_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Unpacker_HUB2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_548_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Unpacker_HUB2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_548_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_548_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_HUB2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_548_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_HUB2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_548_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_HUB2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_548_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_HUB2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Unpacker_HUB2", 1193, G__mydict_548_0_20, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2), -1, 0, 1, 1, 1, 0, "u 'Unpacker_HUB2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Unpacker_HUB2", 1319, G__mydict_548_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_548_0_22, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_Unpacker_HUB2), -1, 1, 1, 1, 1, 0, "u 'Unpacker_HUB2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpacker_TRB2(void) {
   /* Unpacker_TRB2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2));
   G__memfunc_setup("Unpacker_TRB2",1202,G__mydict_549_0_1, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unpacker_TRB2",1202,G__mydict_549_0_2, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2), -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - bT u 'string' - 0 - bA "
"u 'string' - 0 - hA i - - 0 - cN "
"i - - 0 - o i - - 0 - r "
"u 'string' - 0 - mR g - - 0 - dec "
"g - - 0 - dbg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"H - 'UInt_t' 0 - data U 'Event' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetADCHits",896,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCHits",915,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetReferenceChannel",1908,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SayHi",478,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__mydict_549_0_9, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Unpacker_TRB2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_549_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_TRB2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_549_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Unpacker_TRB2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_549_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Unpacker_TRB2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_549_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_549_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_TRB2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_549_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_TRB2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_549_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_TRB2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_549_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_TRB2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Unpacker_TRB2", 1202, G__mydict_549_0_21, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2), -1, 0, 1, 1, 1, 0, "u 'Unpacker_TRB2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Unpacker_TRB2", 1328, G__mydict_549_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_549_0_23, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB2), -1, 1, 1, 1, 1, 0, "u 'Unpacker_TRB2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpacker_Shower(void) {
   /* Unpacker_Shower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower));
   G__memfunc_setup("Unpacker_Shower",1552,G__mydict_550_0_1, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unpacker_Shower",1552,G__mydict_550_0_2, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower), -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - bT u 'string' - 0 - bA "
"u 'string' - 0 - hA i - - 0 - cN "
"i - - 0 - o i - - 0 - r "
"u 'string' - 0 - mR g - - 0 - dec "
"g - - 0 - dbg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"H - 'UInt_t' 0 - data U 'Event' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetADCHits",896,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCHits",915,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SayHi",478,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__mydict_550_0_8, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Unpacker_Shower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_550_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_Shower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_550_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Unpacker_Shower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_550_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Unpacker_Shower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_550_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_550_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_Shower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_550_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_Shower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_550_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_Shower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_550_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_Shower::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Unpacker_Shower", 1552, G__mydict_550_0_20, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower), -1, 0, 1, 1, 1, 0, "u 'Unpacker_Shower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Unpacker_Shower", 1678, G__mydict_550_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_550_0_22, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_Unpacker_Shower), -1, 1, 1, 1, 1, 0, "u 'Unpacker_Shower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpacker_Ecal_ADC(void) {
   /* Unpacker_Ecal_ADC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC));
   G__memfunc_setup("Unpacker_Ecal_ADC",1588,G__mydict_551_0_1, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unpacker_Ecal_ADC",1588,G__mydict_551_0_2, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC), -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - bT u 'string' - 0 - bA "
"u 'string' - 0 - hA i - - 0 - cN "
"i - - 0 - o i - - 0 - r "
"u 'string' - 0 - mR g - - 0 - dec "
"g - - 0 - dbg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"H - 'UInt_t' 0 - data U 'Event' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetADCHits",896,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCHits",915,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SayHi",478,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddSample",875,G__mydict_551_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - channel i - 'Int_t' 0 - sampleNr "
"i - 'Int_t' 0 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDspSum",904,G__mydict_551_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - channel i - 'Int_t' 0 - sum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDspMean",980,G__mydict_551_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - channel i - 'Int_t' 0 - mean", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDspCfA",829,G__mydict_551_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - channel i - 'Int_t' 0 - cfa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDspCfB",830,G__mydict_551_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - channel i - 'Int_t' 0 - cfb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDspCfT",848,G__mydict_551_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - channel i - 'Int_t' 0 - cft", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSample",898,G__mydict_551_0_14, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - channel i - 'Int_t' 0 - sampleNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDspSum",892,G__mydict_551_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDspMean",968,G__mydict_551_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDspCfA",817,G__mydict_551_0_17, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDspCfB",818,G__mydict_551_0_18, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDspCfT",836,G__mydict_551_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfSamples",1811,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__mydict_551_0_21, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Unpacker_Ecal_ADC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_551_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_Ecal_ADC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_551_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Unpacker_Ecal_ADC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_551_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Unpacker_Ecal_ADC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_551_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_551_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_Ecal_ADC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_551_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_Ecal_ADC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_551_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_Ecal_ADC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_551_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_Ecal_ADC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Unpacker_Ecal_ADC", 1588, G__mydict_551_0_33, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC), -1, 0, 1, 1, 1, 0, "u 'Unpacker_Ecal_ADC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Unpacker_Ecal_ADC", 1714, G__mydict_551_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_551_0_35, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_Unpacker_Ecal_ADC), -1, 1, 1, 1, 1, 0, "u 'Unpacker_Ecal_ADC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpacker_TRB3(void) {
   /* Unpacker_TRB3 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3));
   G__memfunc_setup("Unpacker_TRB3",1203,G__mydict_552_0_1, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unpacker_TRB3",1203,G__mydict_552_0_2, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3), -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - bT u 'string' - 0 - bA "
"u 'string' - 0 - hA i - - 0 - cN "
"i - - 0 - o i - - 0 - r "
"u 'string' - 0 - mR g - - 0 - dec "
"g - - 0 - dbg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"H - 'UInt_t' 0 - data U 'Event' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetADCHits",896,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCHits",915,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetReferenceChannel",1908,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SayHi",478,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__mydict_552_0_9, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Unpacker_TRB3::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_552_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_TRB3::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_552_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Unpacker_TRB3::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_552_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Unpacker_TRB3::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_552_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_552_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_TRB3::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_552_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_TRB3::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_552_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_TRB3::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_552_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_TRB3::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Unpacker_TRB3", 1203, G__mydict_552_0_21, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3), -1, 0, 1, 1, 1, 0, "u 'Unpacker_TRB3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Unpacker_TRB3", 1329, G__mydict_552_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_552_0_23, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_Unpacker_TRB3), -1, 1, 1, 1, 1, 0, "u 'Unpacker_TRB3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUnpacker_Lattice_TDC(void) {
   /* Unpacker_Lattice_TDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC));
   G__memfunc_setup("Unpacker_Lattice_TDC",1944,G__mydict_574_0_1, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Unpacker_Lattice_TDC",1944,G__mydict_574_0_2, 105, G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC), -1, 0, 10, 1, 1, 0, 
"u 'string' - 0 - bT u 'string' - 0 - bA "
"u 'string' - 0 - hA i - - 0 - cN "
"i - - 0 - o i - - 0 - r "
"u 'string' - 0 - mR g - - 0 - dec "
"g - - 0 - dbg u 'string' - 0 - cF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "H - 'UInt_t' 0 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"H - 'UInt_t' 0 - data U 'Event' - 0 - evt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SayHi",478,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeadTime",1061,(G__InterfaceMethod) NULL,102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeadMult",1080,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrailTime",1195,(G__InterfaceMethod) NULL,102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrailMult",1214,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - - 0 - channel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFineTime",1073,(G__InterfaceMethod) NULL,102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCoarseTime",1292,(G__InterfaceMethod) NULL,102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - channel i - - 0 - mult", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetErrorBits",1212,(G__InterfaceMethod) NULL,104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__mydict_574_0_14, 85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Unpacker_Lattice_TDC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__mydict_574_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_Lattice_TDC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__mydict_574_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Unpacker_Lattice_TDC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__mydict_574_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Unpacker_Lattice_TDC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__mydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__mydict_574_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__mydict_574_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_Lattice_TDC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__mydict_574_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_Lattice_TDC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__mydict_574_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Unpacker_Lattice_TDC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__mydict_574_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Unpacker_Lattice_TDC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Unpacker_Lattice_TDC", 1944, G__mydict_574_0_26, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC), -1, 0, 1, 1, 1, 0, "u 'Unpacker_Lattice_TDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Unpacker_Lattice_TDC", 2070, G__mydict_574_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_574_0_28, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_Unpacker_Lattice_TDC), -1, 1, 1, 1, 1, 0, "u 'Unpacker_Lattice_TDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncmydict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalmydict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcmydict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__mydictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__mydictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__mydictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__mydictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__mydictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__mydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__mydictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__mydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__mydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__mydictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__mydictLN_TDCHit = { "TDCHit" , 99 , -1 };
G__linked_taginfo G__mydictLN_ADCHit = { "ADCHit" , 99 , -1 };
G__linked_taginfo G__mydictLN_Event = { "Event" , 99 , -1 };
G__linked_taginfo G__mydictLN_UnpackingModule = { "UnpackingModule" , 99 , -1 };
G__linked_taginfo G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgR = { "map<string,UnpackingModule*,less<string>,allocator<pair<const string,UnpackingModule*> > >" , 99 , -1 };
G__linked_taginfo G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgRcLcLiterator = { "map<string,UnpackingModule*,less<string>,allocator<pair<const string,UnpackingModule*> > >::iterator" , 99 , -1 };
G__linked_taginfo G__mydictLN_Unpacker2 = { "Unpacker2" , 99 , -1 };
G__linked_taginfo G__mydictLN_Unpacker2cLcLEventHdr = { "Unpacker2::EventHdr" , 115 , -1 };
G__linked_taginfo G__mydictLN_Unpacker2cLcLSubEventHdr = { "Unpacker2::SubEventHdr" , 115 , -1 };
G__linked_taginfo G__mydictLN_Unpacker_HPTDC_HR = { "Unpacker_HPTDC_HR" , 99 , -1 };
G__linked_taginfo G__mydictLN_InlCorrector = { "InlCorrector" , 99 , -1 };
G__linked_taginfo G__mydictLN_Unpacker_HPTDC_VHR = { "Unpacker_HPTDC_VHR" , 99 , -1 };
G__linked_taginfo G__mydictLN_Unpacker_HUB2 = { "Unpacker_HUB2" , 99 , -1 };
G__linked_taginfo G__mydictLN_Unpacker_TRB2 = { "Unpacker_TRB2" , 99 , -1 };
G__linked_taginfo G__mydictLN_Unpacker_Shower = { "Unpacker_Shower" , 99 , -1 };
G__linked_taginfo G__mydictLN_Unpacker_Ecal_ADC = { "Unpacker_Ecal_ADC" , 99 , -1 };
G__linked_taginfo G__mydictLN_Unpacker_TRB3 = { "Unpacker_TRB3" , 99 , -1 };
G__linked_taginfo G__mydictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__mydictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__mydictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__mydictLN_Unpacker_Lattice_TDC = { "Unpacker_Lattice_TDC" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablemydict() {
  G__mydictLN_TClass.tagnum = -1 ;
  G__mydictLN_TBuffer.tagnum = -1 ;
  G__mydictLN_TMemberInspector.tagnum = -1 ;
  G__mydictLN_TObject.tagnum = -1 ;
  G__mydictLN_string.tagnum = -1 ;
  G__mydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__mydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__mydictLN_TClonesArray.tagnum = -1 ;
  G__mydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__mydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__mydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__mydictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__mydictLN_TDCHit.tagnum = -1 ;
  G__mydictLN_ADCHit.tagnum = -1 ;
  G__mydictLN_Event.tagnum = -1 ;
  G__mydictLN_UnpackingModule.tagnum = -1 ;
  G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgR.tagnum = -1 ;
  G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__mydictLN_Unpacker2.tagnum = -1 ;
  G__mydictLN_Unpacker2cLcLEventHdr.tagnum = -1 ;
  G__mydictLN_Unpacker2cLcLSubEventHdr.tagnum = -1 ;
  G__mydictLN_Unpacker_HPTDC_HR.tagnum = -1 ;
  G__mydictLN_InlCorrector.tagnum = -1 ;
  G__mydictLN_Unpacker_HPTDC_VHR.tagnum = -1 ;
  G__mydictLN_Unpacker_HUB2.tagnum = -1 ;
  G__mydictLN_Unpacker_TRB2.tagnum = -1 ;
  G__mydictLN_Unpacker_Shower.tagnum = -1 ;
  G__mydictLN_Unpacker_Ecal_ADC.tagnum = -1 ;
  G__mydictLN_Unpacker_TRB3.tagnum = -1 ;
  G__mydictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__mydictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__mydictLN_TH1F.tagnum = -1 ;
  G__mydictLN_Unpacker_Lattice_TDC.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablemydict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__mydictLN_TClass);
   G__get_linked_tagnum_fwd(&G__mydictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__mydictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__mydictLN_TObject);
   G__get_linked_tagnum_fwd(&G__mydictLN_string);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_TDCHit),sizeof(TDCHit),-1,29952,(char*)NULL,G__setup_memvarTDCHit,G__setup_memfuncTDCHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_ADCHit),sizeof(ADCHit),-1,29952,(char*)NULL,G__setup_memvarADCHit,G__setup_memfuncADCHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_Event),sizeof(Event),-1,29952,(char*)NULL,G__setup_memvarEvent,G__setup_memfuncEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_UnpackingModule),sizeof(UnpackingModule),-1,62720,(char*)NULL,G__setup_memvarUnpackingModule,G__setup_memfuncUnpackingModule);
   G__get_linked_tagnum_fwd(&G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_maplEstringcOUnpackingModulemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOUnpackingModulemUgRsPgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker2),sizeof(Unpacker2),-1,62464,(char*)NULL,G__setup_memvarUnpacker2,G__setup_memfuncUnpacker2);
   G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker2cLcLEventHdr);
   G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker2cLcLSubEventHdr);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker_HPTDC_HR),sizeof(Unpacker_HPTDC_HR),-1,62720,(char*)NULL,G__setup_memvarUnpacker_HPTDC_HR,G__setup_memfuncUnpacker_HPTDC_HR);
   G__get_linked_tagnum_fwd(&G__mydictLN_InlCorrector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker_HPTDC_VHR),sizeof(Unpacker_HPTDC_VHR),-1,62720,(char*)NULL,G__setup_memvarUnpacker_HPTDC_VHR,G__setup_memfuncUnpacker_HPTDC_VHR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker_HUB2),sizeof(Unpacker_HUB2),-1,62720,(char*)NULL,G__setup_memvarUnpacker_HUB2,G__setup_memfuncUnpacker_HUB2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker_TRB2),sizeof(Unpacker_TRB2),-1,62720,(char*)NULL,G__setup_memvarUnpacker_TRB2,G__setup_memfuncUnpacker_TRB2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker_Shower),sizeof(Unpacker_Shower),-1,62720,(char*)NULL,G__setup_memvarUnpacker_Shower,G__setup_memfuncUnpacker_Shower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker_Ecal_ADC),sizeof(Unpacker_Ecal_ADC),-1,62720,(char*)NULL,G__setup_memvarUnpacker_Ecal_ADC,G__setup_memfuncUnpacker_Ecal_ADC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker_TRB3),sizeof(Unpacker_TRB3),-1,62720,(char*)NULL,G__setup_memvarUnpacker_TRB3,G__setup_memfuncUnpacker_TRB3);
   G__get_linked_tagnum_fwd(&G__mydictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__mydictLN_TH1F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_Unpacker_Lattice_TDC),sizeof(Unpacker_Lattice_TDC),-1,62720,(char*)NULL,G__setup_memvarUnpacker_Lattice_TDC,G__setup_memfuncUnpacker_Lattice_TDC);
}
extern "C" void G__cpp_setupmydict(void) {
  G__check_setup_version(30051515,"G__cpp_setupmydict()");
  G__set_cpp_environmentmydict();
  G__cpp_setup_tagtablemydict();

  G__cpp_setup_inheritancemydict();

  G__cpp_setup_typetablemydict();

  G__cpp_setup_memvarmydict();

  G__cpp_setup_memfuncmydict();
  G__cpp_setup_globalmydict();
  G__cpp_setup_funcmydict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncmydict();
  return;
}
class G__cpp_setup_initmydict {
  public:
    G__cpp_setup_initmydict() { G__add_setup_func("mydict",(G__incsetup)(&G__cpp_setupmydict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initmydict() { G__remove_setup_func("mydict"); }
};
G__cpp_setup_initmydict G__cpp_setup_initializermydict;

