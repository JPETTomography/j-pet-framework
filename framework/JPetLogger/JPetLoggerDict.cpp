//
// File generated by rootcint at Tue Mar 11 21:21:35 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME JPetLoggerDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "JPetLoggerDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JPetLogger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void JPetLogger_Dictionary();
   static void delete_JPetLogger(void *p);
   static void deleteArray_JPetLogger(void *p);
   static void destruct_JPetLogger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JPetLogger*)
   {
      ::JPetLogger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::JPetLogger),0);
      static ::ROOT::TGenericClassInfo 
         instance("JPetLogger", "./JPetLogger.h", 18,
                  typeid(::JPetLogger), DefineBehavior(ptr, ptr),
                  0, &JPetLogger_Dictionary, isa_proxy, 0,
                  sizeof(::JPetLogger) );
      instance.SetDelete(&delete_JPetLogger);
      instance.SetDeleteArray(&deleteArray_JPetLogger);
      instance.SetDestructor(&destruct_JPetLogger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JPetLogger*)
   {
      return GenerateInitInstanceLocal((::JPetLogger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JPetLogger*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void JPetLogger_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::JPetLogger*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrapper around operator delete
   static void delete_JPetLogger(void *p) {
      delete ((::JPetLogger*)p);
   }
   static void deleteArray_JPetLogger(void *p) {
      delete [] ((::JPetLogger*)p);
   }
   static void destruct_JPetLogger(void *p) {
      typedef ::JPetLogger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JPetLogger

/********************************************************
* JPetLoggerDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableJPetLoggerDict();

extern "C" void G__set_cpp_environmentJPetLoggerDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("JPetLogger.h");
  G__cpp_reset_tagtableJPetLoggerDict();
}
#include <new>
extern "C" int G__cpp_dllrevJPetLoggerDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JPetLogger */
static int G__JPetLoggerDict_162_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JPetLogger::dateAndTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetLoggerDict_162_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JPetLogger::warning((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetLoggerDict_162_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JPetLogger::error((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetLoggerDict_162_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JPetLogger::info((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetLoggerDict_162_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JPetLogger::warning((const char*) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetLoggerDict_162_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JPetLogger::error((const char*) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetLoggerDict_162_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JPetLogger::info((const char*) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JPetLogger G__TJPetLogger;
static int G__JPetLoggerDict_162_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JPetLogger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JPetLogger*) (soff+(sizeof(JPetLogger)*i)))->~G__TJPetLogger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JPetLogger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JPetLogger*) (soff))->~G__TJPetLogger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JPetLogger */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncJPetLoggerDict {
 public:
  G__Sizep2memfuncJPetLoggerDict(): p(&G__Sizep2memfuncJPetLoggerDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncJPetLoggerDict::*p)();
};

size_t G__get_sizep2memfuncJPetLoggerDict()
{
  G__Sizep2memfuncJPetLoggerDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceJPetLoggerDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableJPetLoggerDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__JPetLoggerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JPetLoggerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetLoggerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JPetLoggerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetLoggerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__JPetLoggerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JPetLoggerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetLoggerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JPetLoggerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetLoggerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JPetLogger */
static void G__setup_memvarJPetLogger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JPetLoggerDictLN_JPetLogger));
   { JPetLogger *p; p=(JPetLogger*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JPetLoggerDictLN_JPetLoggercLcLMessageType),-1,-2,4,"kInfo=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JPetLoggerDictLN_JPetLoggercLcLMessageType),-1,-2,4,"kWarning=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JPetLoggerDictLN_JPetLoggercLcLMessageType),-1,-2,4,"kError=2LL",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"fFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-2,4,"fIsLogFile=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarJPetLoggerDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJPetLogger(void) {
   /* JPetLogger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JPetLoggerDictLN_JPetLogger));
   G__memfunc_setup("dateAndTime",1088,G__JPetLoggerDict_162_0_1, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JPetLogger::dateAndTime) ), 0);
   G__memfunc_setup("warning",758,G__JPetLoggerDict_162_0_2, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 - func C - - 10 - msg", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*))(&JPetLogger::warning) ), 0);
   G__memfunc_setup("error",554,G__JPetLoggerDict_162_0_3, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 - func C - - 10 - msg", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*))(&JPetLogger::error) ), 0);
   G__memfunc_setup("info",428,G__JPetLoggerDict_162_0_4, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 - func C - - 10 - msg", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*))(&JPetLogger::info) ), 0);
   G__memfunc_setup("warning",758,G__JPetLoggerDict_162_0_5, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 - func u 'string' - 11 - msg", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const string&))(&JPetLogger::warning) ), 0);
   G__memfunc_setup("error",554,G__JPetLoggerDict_162_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 - func u 'string' - 11 - msg", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const string&))(&JPetLogger::error) ), 0);
   G__memfunc_setup("info",428,G__JPetLoggerDict_162_0_7, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - - 10 - func u 'string' - 11 - msg", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const string&))(&JPetLogger::info) ), 0);
   G__memfunc_setup("JPetLogger",979,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__JPetLoggerDictLN_JPetLogger), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JPetLogger",979,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__JPetLoggerDictLN_JPetLogger), -1, 0, 1, 1, 4, 0, "u 'JPetLogger' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__JPetLoggerDictLN_JPetLogger), -1, 1, 1, 1, 4, 0, "u 'JPetLogger' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("logMessage",1031,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 3, 4, 0, 
"C - - 10 - func C - - 10 - msg "
"i 'JPetLogger::MessageType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JPetLogger", 1105, G__JPetLoggerDict_162_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncJPetLoggerDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalJPetLoggerDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcJPetLoggerDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__JPetLoggerDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__JPetLoggerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__JPetLoggerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JPetLoggerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__JPetLoggerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JPetLoggerDictLN_JPetLogger = { "JPetLogger" , 99 , -1 };
G__linked_taginfo G__JPetLoggerDictLN_JPetLoggercLcLMessageType = { "JPetLogger::MessageType" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableJPetLoggerDict() {
  G__JPetLoggerDictLN_string.tagnum = -1 ;
  G__JPetLoggerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__JPetLoggerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JPetLoggerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__JPetLoggerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JPetLoggerDictLN_JPetLogger.tagnum = -1 ;
  G__JPetLoggerDictLN_JPetLoggercLcLMessageType.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableJPetLoggerDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__JPetLoggerDictLN_string);
   G__get_linked_tagnum_fwd(&G__JPetLoggerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__JPetLoggerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JPetLoggerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__JPetLoggerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JPetLoggerDictLN_JPetLogger),sizeof(JPetLogger),-1,2816,(char*)NULL,G__setup_memvarJPetLogger,G__setup_memfuncJPetLogger);
   G__get_linked_tagnum_fwd(&G__JPetLoggerDictLN_JPetLoggercLcLMessageType);
}
extern "C" void G__cpp_setupJPetLoggerDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupJPetLoggerDict()");
  G__set_cpp_environmentJPetLoggerDict();
  G__cpp_setup_tagtableJPetLoggerDict();

  G__cpp_setup_inheritanceJPetLoggerDict();

  G__cpp_setup_typetableJPetLoggerDict();

  G__cpp_setup_memvarJPetLoggerDict();

  G__cpp_setup_memfuncJPetLoggerDict();
  G__cpp_setup_globalJPetLoggerDict();
  G__cpp_setup_funcJPetLoggerDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncJPetLoggerDict();
  return;
}
class G__cpp_setup_initJPetLoggerDict {
  public:
    G__cpp_setup_initJPetLoggerDict() { G__add_setup_func("JPetLoggerDict",(G__incsetup)(&G__cpp_setupJPetLoggerDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initJPetLoggerDict() { G__remove_setup_func("JPetLoggerDict"); }
};
G__cpp_setup_initJPetLoggerDict G__cpp_setup_initializerJPetLoggerDict;

