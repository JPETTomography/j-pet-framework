//
// File generated by rootcint at Tue Mar 11 21:21:30 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME JPetSignalDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "JPetSignalDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void History_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_History(void *p = 0);
   static void *newArray_History(Long_t size, void *p);
   static void delete_History(void *p);
   static void deleteArray_History(void *p);
   static void destruct_History(void *p);
   static void streamer_History(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::History*)
   {
      ::History *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::History >(0);
      static ::ROOT::TGenericClassInfo 
         instance("History", ::History::Class_Version(), "./JPetSignal.h", 17,
                  typeid(::History), DefineBehavior(ptr, ptr),
                  &::History::Dictionary, isa_proxy, 0,
                  sizeof(::History) );
      instance.SetNew(&new_History);
      instance.SetNewArray(&newArray_History);
      instance.SetDelete(&delete_History);
      instance.SetDeleteArray(&deleteArray_History);
      instance.SetDestructor(&destruct_History);
      instance.SetStreamerFunc(&streamer_History);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::History*)
   {
      return GenerateInitInstanceLocal((::History*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::History*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExtendedThreshold_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ExtendedThreshold(void *p = 0);
   static void *newArray_ExtendedThreshold(Long_t size, void *p);
   static void delete_ExtendedThreshold(void *p);
   static void deleteArray_ExtendedThreshold(void *p);
   static void destruct_ExtendedThreshold(void *p);
   static void streamer_ExtendedThreshold(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExtendedThreshold*)
   {
      ::ExtendedThreshold *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExtendedThreshold >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExtendedThreshold", ::ExtendedThreshold::Class_Version(), "./JPetSignal.h", 34,
                  typeid(::ExtendedThreshold), DefineBehavior(ptr, ptr),
                  &::ExtendedThreshold::Dictionary, isa_proxy, 0,
                  sizeof(::ExtendedThreshold) );
      instance.SetNew(&new_ExtendedThreshold);
      instance.SetNewArray(&newArray_ExtendedThreshold);
      instance.SetDelete(&delete_ExtendedThreshold);
      instance.SetDeleteArray(&deleteArray_ExtendedThreshold);
      instance.SetDestructor(&destruct_ExtendedThreshold);
      instance.SetStreamerFunc(&streamer_ExtendedThreshold);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExtendedThreshold*)
   {
      return GenerateInitInstanceLocal((::ExtendedThreshold*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExtendedThreshold*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void JPetSignal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JPetSignal(void *p = 0);
   static void *newArray_JPetSignal(Long_t size, void *p);
   static void delete_JPetSignal(void *p);
   static void deleteArray_JPetSignal(void *p);
   static void destruct_JPetSignal(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JPetSignal*)
   {
      ::JPetSignal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JPetSignal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JPetSignal", ::JPetSignal::Class_Version(), "./JPetSignal.h", 57,
                  typeid(::JPetSignal), DefineBehavior(ptr, ptr),
                  &::JPetSignal::Dictionary, isa_proxy, 4,
                  sizeof(::JPetSignal) );
      instance.SetNew(&new_JPetSignal);
      instance.SetNewArray(&newArray_JPetSignal);
      instance.SetDelete(&delete_JPetSignal);
      instance.SetDeleteArray(&deleteArray_JPetSignal);
      instance.SetDestructor(&destruct_JPetSignal);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JPetSignal*)
   {
      return GenerateInitInstanceLocal((::JPetSignal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JPetSignal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *History::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *History::Class_Name()
{
   return "History";
}

//______________________________________________________________________________
const char *History::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::History*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int History::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::History*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void History::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::History*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *History::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::History*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExtendedThreshold::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExtendedThreshold::Class_Name()
{
   return "ExtendedThreshold";
}

//______________________________________________________________________________
const char *ExtendedThreshold::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExtendedThreshold*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExtendedThreshold::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExtendedThreshold*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExtendedThreshold::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExtendedThreshold*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExtendedThreshold::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExtendedThreshold*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *JPetSignal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *JPetSignal::Class_Name()
{
   return "JPetSignal";
}

//______________________________________________________________________________
const char *JPetSignal::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JPetSignal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JPetSignal::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JPetSignal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JPetSignal::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JPetSignal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JPetSignal::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JPetSignal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void JPetSignal::Streamer(TBuffer &R__b)
{
   // Stream an object of class JPetSignal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JPetSignal::Class(),this);
   } else {
      R__b.WriteClassBuffer(JPetSignal::Class(),this);
   }
}

//______________________________________________________________________________
void JPetSignal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JPetSignal.
      TClass *R__cl = ::JPetSignal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQualityOfTime", &fQualityOfTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLeft", &fLeft);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFallingPoints", (void*)&fFallingPoints);
      R__insp.InspectMember("vector<ExtendedThreshold>", (void*)&fFallingPoints, "fFallingPoints.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRisingPoints", (void*)&fRisingPoints);
      R__insp.InspectMember("vector<ExtendedThreshold>", (void*)&fRisingPoints, "fRisingPoints.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_JPetSignal(void *p) {
      return  p ? new(p) ::JPetSignal : new ::JPetSignal;
   }
   static void *newArray_JPetSignal(Long_t nElements, void *p) {
      return p ? new(p) ::JPetSignal[nElements] : new ::JPetSignal[nElements];
   }
   // Wrapper around operator delete
   static void delete_JPetSignal(void *p) {
      delete ((::JPetSignal*)p);
   }
   static void deleteArray_JPetSignal(void *p) {
      delete [] ((::JPetSignal*)p);
   }
   static void destruct_JPetSignal(void *p) {
      typedef ::JPetSignal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JPetSignal

//______________________________________________________________________________
void History::Streamer(TBuffer &R__b)
{
   // Stream an object of class History.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fHldID;
      R__b >> fTslot;
      R__b >> fChSig;
      R__b >> fDAQch;
      R__b.CheckByteCount(R__s, R__c, History::IsA());
   } else {
      R__c = R__b.WriteVersion(History::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fHldID;
      R__b << fTslot;
      R__b << fChSig;
      R__b << fDAQch;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void History::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class History.
      TClass *R__cl = ::History::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHldID", &fHldID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTslot", &fTslot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChSig", &fChSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDAQch", &fDAQch);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_History(void *p) {
      return  p ? new(p) ::History : new ::History;
   }
   static void *newArray_History(Long_t nElements, void *p) {
      return p ? new(p) ::History[nElements] : new ::History[nElements];
   }
   // Wrapper around operator delete
   static void delete_History(void *p) {
      delete ((::History*)p);
   }
   static void deleteArray_History(void *p) {
      delete [] ((::History*)p);
   }
   static void destruct_History(void *p) {
      typedef ::History current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_History(TBuffer &buf, void *obj) {
      ((::History*)obj)->::History::Streamer(buf);
   }
} // end of namespace ROOT for class ::History

//______________________________________________________________________________
void ExtendedThreshold::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExtendedThreshold.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      fHistory.Streamer(R__b);
      R__b >> fThreshold;
      R__b >> fTime;
      R__b >> fQuality;
      fSigCh.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ExtendedThreshold::IsA());
   } else {
      R__c = R__b.WriteVersion(ExtendedThreshold::IsA(), kTRUE);
      fHistory.Streamer(R__b);
      R__b << fThreshold;
      R__b << fTime;
      R__b << fQuality;
      fSigCh.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ExtendedThreshold::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExtendedThreshold.
      TClass *R__cl = ::ExtendedThreshold::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHistory", &fHistory);
      R__insp.InspectMember(fHistory, "fHistory.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThreshold", &fThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQuality", &fQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigCh", &fSigCh);
      R__insp.InspectMember(fSigCh, "fSigCh.");
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExtendedThreshold(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ExtendedThreshold : new ::ExtendedThreshold;
   }
   static void *newArray_ExtendedThreshold(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ExtendedThreshold[nElements] : new ::ExtendedThreshold[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExtendedThreshold(void *p) {
      delete ((::ExtendedThreshold*)p);
   }
   static void deleteArray_ExtendedThreshold(void *p) {
      delete [] ((::ExtendedThreshold*)p);
   }
   static void destruct_ExtendedThreshold(void *p) {
      typedef ::ExtendedThreshold current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ExtendedThreshold(TBuffer &buf, void *obj) {
      ((::ExtendedThreshold*)obj)->::ExtendedThreshold::Streamer(buf);
   }
} // end of namespace ROOT for class ::ExtendedThreshold

namespace ROOT {
   void vectorlEExtendedThresholdgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEExtendedThresholdgR_Dictionary();
   static void *new_vectorlEExtendedThresholdgR(void *p = 0);
   static void *newArray_vectorlEExtendedThresholdgR(Long_t size, void *p);
   static void delete_vectorlEExtendedThresholdgR(void *p);
   static void deleteArray_vectorlEExtendedThresholdgR(void *p);
   static void destruct_vectorlEExtendedThresholdgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<ExtendedThreshold>*)
   {
      vector<ExtendedThreshold> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ExtendedThreshold>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ExtendedThreshold>", -2, "prec_stl/vector", 49,
                  typeid(vector<ExtendedThreshold>), DefineBehavior(ptr, ptr),
                  0, &vectorlEExtendedThresholdgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ExtendedThreshold>) );
      instance.SetNew(&new_vectorlEExtendedThresholdgR);
      instance.SetNewArray(&newArray_vectorlEExtendedThresholdgR);
      instance.SetDelete(&delete_vectorlEExtendedThresholdgR);
      instance.SetDeleteArray(&deleteArray_vectorlEExtendedThresholdgR);
      instance.SetDestructor(&destruct_vectorlEExtendedThresholdgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<ExtendedThreshold> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ExtendedThreshold>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEExtendedThresholdgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<ExtendedThreshold>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEExtendedThresholdgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ExtendedThreshold> : new vector<ExtendedThreshold>;
   }
   static void *newArray_vectorlEExtendedThresholdgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ExtendedThreshold>[nElements] : new vector<ExtendedThreshold>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEExtendedThresholdgR(void *p) {
      delete ((vector<ExtendedThreshold>*)p);
   }
   static void deleteArray_vectorlEExtendedThresholdgR(void *p) {
      delete [] ((vector<ExtendedThreshold>*)p);
   }
   static void destruct_vectorlEExtendedThresholdgR(void *p) {
      typedef vector<ExtendedThreshold> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<ExtendedThreshold>

/********************************************************
* JPetSignalDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableJPetSignalDict();

extern "C" void G__set_cpp_environmentJPetSignalDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("JPetSignal.h");
  G__cpp_reset_tagtableJPetSignalDict();
}
#include <new>
extern "C" int G__cpp_dllrevJPetSignalDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* History */
static int G__JPetSignalDict_469_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   History* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new History(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) History(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new History(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) History(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new History((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) History((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new History((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) History((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new History[n];
       } else {
         p = new((void*) gvp) History[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new History;
       } else {
         p = new((void*) gvp) History;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JPetSignalDictLN_History));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_469_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) History::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_469_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) History::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_469_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) History::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_469_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      History::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_469_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((History*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_469_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) History::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_469_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) History::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_469_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) History::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_469_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) History::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JPetSignalDict_469_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   History* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new History(*(History*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JPetSignalDictLN_History));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef History G__THistory;
static int G__JPetSignalDict_469_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (History*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((History*) (soff+(sizeof(History)*i)))->~G__THistory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (History*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((History*) (soff))->~G__THistory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JPetSignalDict_469_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   History* dest = (History*) G__getstructoffset();
   *dest = *(History*) libp->para[0].ref;
   const History& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExtendedThreshold */
static int G__JPetSignalDict_470_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExtendedThreshold* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExtendedThreshold[n];
     } else {
       p = new((void*) gvp) ExtendedThreshold[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExtendedThreshold;
     } else {
       p = new((void*) gvp) ExtendedThreshold;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JPetSignalDictLN_ExtendedThreshold));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExtendedThreshold* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ExtendedThreshold(
*((History*) G__int(libp->para[0])), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, *(JPetSigCh*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) ExtendedThreshold(
*((History*) G__int(libp->para[0])), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, *(JPetSigCh*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JPetSignalDictLN_ExtendedThreshold));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExtendedThreshold::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExtendedThreshold::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExtendedThreshold::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExtendedThreshold::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ExtendedThreshold*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExtendedThreshold*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExtendedThreshold*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExtendedThreshold*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExtendedThreshold::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExtendedThreshold::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExtendedThreshold::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_470_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExtendedThreshold::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JPetSignalDict_470_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExtendedThreshold* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExtendedThreshold(*(ExtendedThreshold*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JPetSignalDictLN_ExtendedThreshold));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExtendedThreshold G__TExtendedThreshold;
static int G__JPetSignalDict_470_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExtendedThreshold*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExtendedThreshold*) (soff+(sizeof(ExtendedThreshold)*i)))->~G__TExtendedThreshold();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExtendedThreshold*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExtendedThreshold*) (soff))->~G__TExtendedThreshold();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JPetSignal */
static int G__JPetSignalDict_471_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JPetSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JPetSignal[n];
     } else {
       p = new((void*) gvp) JPetSignal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JPetSignal;
     } else {
       p = new((void*) gvp) JPetSignal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JPetSignal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JPetSignal(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (bool) G__int(libp->para[2]), *(vector<ExtendedThreshold>*) libp->para[3].ref
, *(vector<ExtendedThreshold>*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) JPetSignal(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (bool) G__int(libp->para[2]), *(vector<ExtendedThreshold>*) libp->para[3].ref
, *(vector<ExtendedThreshold>*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const JPetSignal*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const JPetSignal*) G__getstructoffset())->GetQual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const JPetSignal*) G__getstructoffset())->IsLeft());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const JPetSignal*) G__getstructoffset())->GetNTresholds((JPetSignal::Edge) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JPetSignal*) G__getstructoffset())->setExtendedThreshold(*(ExtendedThreshold*) libp->para[0].ref, (JPetSignal::Edge) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ExtendedThreshold* pobj;
         const ExtendedThreshold xobj = ((const JPetSignal*) G__getstructoffset())->getExtendedThreshold(*(ExtendedThreshold*) libp->para[0].ref, (JPetSignal::Edge) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new ExtendedThreshold(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<ExtendedThreshold>& obj = ((const JPetSignal*) G__getstructoffset())->getFallingPoints();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<ExtendedThreshold>& obj = ((const JPetSignal*) G__getstructoffset())->getRisingPoints();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JPetSignal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JPetSignal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JPetSignal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JPetSignal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JPetSignal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JPetSignal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JPetSignal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JPetSignal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JPetSignalDict_471_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JPetSignal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JPetSignalDict_471_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JPetSignal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JPetSignal(*(JPetSignal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JPetSignal G__TJPetSignal;
static int G__JPetSignalDict_471_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JPetSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JPetSignal*) (soff+(sizeof(JPetSignal)*i)))->~G__TJPetSignal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JPetSignal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JPetSignal*) (soff))->~G__TJPetSignal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JPetSignalDict_471_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JPetSignal* dest = (JPetSignal*) G__getstructoffset();
   *dest = *(JPetSignal*) libp->para[0].ref;
   const JPetSignal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* History */

/* ExtendedThreshold */

/* JPetSignal */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncJPetSignalDict {
 public:
  G__Sizep2memfuncJPetSignalDict(): p(&G__Sizep2memfuncJPetSignalDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncJPetSignalDict::*p)();
};

size_t G__get_sizep2memfuncJPetSignalDict()
{
  G__Sizep2memfuncJPetSignalDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceJPetSignalDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JPetSignalDictLN_History))) {
     History *G__Lderived;
     G__Lderived=(History*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JPetSignalDictLN_History),G__get_linked_tagnum(&G__JPetSignalDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal))) {
     JPetSignal *G__Lderived;
     G__Lderived=(JPetSignal*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal),G__get_linked_tagnum(&G__JPetSignalDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal),G__get_linked_tagnum(&G__JPetSignalDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableJPetSignalDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__JPetSignalDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<EdgeType,float>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_maplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<JPetSigCh::EdgeType,float>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_maplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<JPetSigCh::EdgeType,float,less<JPetSigCh::EdgeType> >",117,G__get_linked_tagnum(&G__JPetSignalDictLN_maplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SingleCh>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_reverse_iteratorlEvectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_reverse_iteratorlEvectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<map<JPetSigCh::EdgeType,float,less<JPetSigCh::EdgeType>,allocator<pair<const JPetSigCh::EdgeType,float> > > >",117,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ExtendedThreshold>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_reverse_iteratorlEvectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JPetSignalDictLN_reverse_iteratorlEvectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* History */
static void G__setup_memvarHistory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JPetSignalDictLN_History));
   { History *p; p=(History*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fHldID)-(long)(p)),105,0,0,-1,-1,-1,1,"fHldID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTslot)-(long)(p)),105,0,0,-1,-1,-1,1,"fTslot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fChSig)-(long)(p)),105,0,0,-1,-1,-1,1,"fChSig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDAQch)-(long)(p)),105,0,0,-1,-1,-1,1,"fDAQch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JPetSignalDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExtendedThreshold */
static void G__setup_memvarExtendedThreshold(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JPetSignalDictLN_ExtendedThreshold));
   { ExtendedThreshold *p; p=(ExtendedThreshold*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fHistory)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__JPetSignalDictLN_History),-1,-1,1,"fHistory=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fThreshold)-(long)(p)),102,0,0,-1,-1,-1,1,"fThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTime)-(long)(p)),102,0,0,-1,-1,-1,1,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fQuality)-(long)(p)),102,0,0,-1,-1,-1,1,"fQuality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSigCh)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSigCh),-1,-1,1,"fSigCh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JPetSignalDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JPetSignal */
static void G__setup_memvarJPetSignal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal));
   { JPetSignal *p; p=(JPetSignal*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignalcLcLEdge),-1,-2,1,G__FastAllocString(2048).Format("kFalling=%lldLL",(long long)JPetSignal::kFalling).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignalcLcLEdge),-1,-2,1,G__FastAllocString(2048).Format("kRising=%lldLL",(long long)JPetSignal::kRising).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fQualityOfTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fLeft=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgR),G__defined_typename("vector<ExtendedThreshold>"),-1,4,"fFallingPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgR),G__defined_typename("vector<ExtendedThreshold>"),-1,4,"fRisingPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JPetSignalDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarJPetSignalDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHistory(void) {
   /* History */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JPetSignalDictLN_History));
   G__memfunc_setup("History",754,G__JPetSignalDict_469_0_1, 105, G__get_linked_tagnum(&G__JPetSignalDictLN_History), -1, 0, 4, 1, 1, 0, 
"i - - 0 '0' hld i - - 0 '0' tslot "
"i - - 0 '0' channel i - - 0 '0' daq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JPetSignalDict_469_0_2, 85, G__get_linked_tagnum(&G__JPetSignalDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&History::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JPetSignalDict_469_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&History::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JPetSignalDict_469_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&History::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JPetSignalDict_469_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&History::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JPetSignalDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JPetSignalDict_469_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JPetSignalDict_469_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&History::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JPetSignalDict_469_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&History::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JPetSignalDict_469_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&History::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JPetSignalDict_469_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&History::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("History", 754, G__JPetSignalDict_469_0_14, (int) ('i'), G__get_linked_tagnum(&G__JPetSignalDictLN_History), -1, 0, 1, 1, 1, 0, "u 'History' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~History", 880, G__JPetSignalDict_469_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JPetSignalDict_469_0_16, (int) ('u'), G__get_linked_tagnum(&G__JPetSignalDictLN_History), -1, 1, 1, 1, 1, 0, "u 'History' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExtendedThreshold(void) {
   /* ExtendedThreshold */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JPetSignalDictLN_ExtendedThreshold));
   G__memfunc_setup("ExtendedThreshold",1758,G__JPetSignalDict_470_0_1, 105, G__get_linked_tagnum(&G__JPetSignalDictLN_ExtendedThreshold), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtendedThreshold",1758,G__JPetSignalDict_470_0_2, 105, G__get_linked_tagnum(&G__JPetSignalDictLN_ExtendedThreshold), -1, 0, 5, 1, 1, 0, 
"u 'History' - 0 - hist f - - 0 - thres "
"f - - 0 - time f - - 0 - qual "
"u 'JPetSigCh' - 11 - sigCh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JPetSignalDict_470_0_3, 85, G__get_linked_tagnum(&G__JPetSignalDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExtendedThreshold::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JPetSignalDict_470_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExtendedThreshold::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JPetSignalDict_470_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExtendedThreshold::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JPetSignalDict_470_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExtendedThreshold::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__JPetSignalDict_470_0_7, 85, G__get_linked_tagnum(&G__JPetSignalDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__JPetSignalDict_470_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__JPetSignalDict_470_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JPetSignalDict_470_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JPetSignalDict_470_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExtendedThreshold::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JPetSignalDict_470_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExtendedThreshold::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JPetSignalDict_470_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExtendedThreshold::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JPetSignalDict_470_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExtendedThreshold::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ExtendedThreshold", 1758, G__JPetSignalDict_470_0_15, (int) ('i'), G__get_linked_tagnum(&G__JPetSignalDictLN_ExtendedThreshold), -1, 0, 1, 1, 1, 0, "u 'ExtendedThreshold' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExtendedThreshold", 1884, G__JPetSignalDict_470_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJPetSignal(void) {
   /* JPetSignal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal));
   G__memfunc_setup("JPetSignal",977,G__JPetSignalDict_471_0_1, 105, G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JPetSignal",977,G__JPetSignalDict_471_0_2, 105, G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal), -1, 0, 5, 1, 1, 0, 
"d - - 0 - time d - - 0 - qual "
"g - - 0 - left u 'vector<ExtendedThreshold,allocator<ExtendedThreshold> >' 'vector<ExtendedThreshold>' 11 - falling "
"u 'vector<ExtendedThreshold,allocator<ExtendedThreshold> >' 'vector<ExtendedThreshold>' 11 - rising", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__JPetSignalDict_471_0_3, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQual",691,G__JPetSignalDict_471_0_4, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLeft",583,G__JPetSignalDict_471_0_5, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTresholds",1318,G__JPetSignalDict_471_0_6, 105, -1, -1, 0, 1, 1, 1, 8, "i 'JPetSignal::Edge' - 0 - edge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setExtendedThreshold",2090,G__JPetSignalDict_471_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'ExtendedThreshold' - 11 - thr i 'JPetSignal::Edge' - 0 - edge "
"i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getExtendedThreshold",2078,G__JPetSignalDict_471_0_8, 117, G__get_linked_tagnum(&G__JPetSignalDictLN_ExtendedThreshold), -1, 0, 3, 1, 1, 8, 
"u 'ExtendedThreshold' - 11 - thr i 'JPetSignal::Edge' - 0 - edge "
"i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFallingPoints",1658,G__JPetSignalDict_471_0_9, 117, G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgR), G__defined_typename("vector<ExtendedThreshold>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRisingPoints",1577,G__JPetSignalDict_471_0_10, 117, G__get_linked_tagnum(&G__JPetSignalDictLN_vectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgR), G__defined_typename("vector<ExtendedThreshold>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JPetSignalDict_471_0_11, 85, G__get_linked_tagnum(&G__JPetSignalDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JPetSignal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JPetSignalDict_471_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JPetSignal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JPetSignalDict_471_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JPetSignal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JPetSignalDict_471_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JPetSignal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JPetSignalDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JPetSignalDict_471_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JPetSignalDict_471_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JPetSignal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JPetSignalDict_471_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JPetSignal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JPetSignalDict_471_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JPetSignal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JPetSignalDict_471_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JPetSignal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("JPetSignal", 977, G__JPetSignalDict_471_0_23, (int) ('i'), G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal), -1, 0, 1, 1, 1, 0, "u 'JPetSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JPetSignal", 1103, G__JPetSignalDict_471_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JPetSignalDict_471_0_25, (int) ('u'), G__get_linked_tagnum(&G__JPetSignalDictLN_JPetSignal), -1, 1, 1, 1, 1, 0, "u 'JPetSignal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncJPetSignalDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalJPetSignalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcJPetSignalDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__JPetSignalDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__JPetSignalDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_JPetSigCh = { "JPetSigCh" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_maplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgR = { "map<JPetSigCh::EdgeType,float,less<JPetSigCh::EdgeType>,allocator<pair<const JPetSigCh::EdgeType,float> > >" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_vectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgR = { "vector<map<JPetSigCh::EdgeType,float,less<JPetSigCh::EdgeType>,allocator<pair<const JPetSigCh::EdgeType,float> > >,allocator<map<JPetSigCh::EdgeType,float,less<JPetSigCh::EdgeType>,allocator<pair<const JPetSigCh::EdgeType,float> > > > >" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_reverse_iteratorlEvectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<map<JPetSigCh::EdgeType,float,less<JPetSigCh::EdgeType>,allocator<pair<const JPetSigCh::EdgeType,float> > >,allocator<map<JPetSigCh::EdgeType,float,less<JPetSigCh::EdgeType>,allocator<pair<const JPetSigCh::EdgeType,float> > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_History = { "History" , 115 , -1 };
G__linked_taginfo G__JPetSignalDictLN_ExtendedThreshold = { "ExtendedThreshold" , 115 , -1 };
G__linked_taginfo G__JPetSignalDictLN_JPetSignal = { "JPetSignal" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_JPetSignalcLcLEdge = { "JPetSignal::Edge" , 101 , -1 };
G__linked_taginfo G__JPetSignalDictLN_vectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgR = { "vector<ExtendedThreshold,allocator<ExtendedThreshold> >" , 99 , -1 };
G__linked_taginfo G__JPetSignalDictLN_reverse_iteratorlEvectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ExtendedThreshold,allocator<ExtendedThreshold> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableJPetSignalDict() {
  G__JPetSignalDictLN_TClass.tagnum = -1 ;
  G__JPetSignalDictLN_TBuffer.tagnum = -1 ;
  G__JPetSignalDictLN_TMemberInspector.tagnum = -1 ;
  G__JPetSignalDictLN_TObject.tagnum = -1 ;
  G__JPetSignalDictLN_TNamed.tagnum = -1 ;
  G__JPetSignalDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__JPetSignalDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JPetSignalDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__JPetSignalDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JPetSignalDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__JPetSignalDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__JPetSignalDictLN_JPetSigCh.tagnum = -1 ;
  G__JPetSignalDictLN_maplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgR.tagnum = -1 ;
  G__JPetSignalDictLN_vectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__JPetSignalDictLN_reverse_iteratorlEvectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JPetSignalDictLN_History.tagnum = -1 ;
  G__JPetSignalDictLN_ExtendedThreshold.tagnum = -1 ;
  G__JPetSignalDictLN_JPetSignal.tagnum = -1 ;
  G__JPetSignalDictLN_JPetSignalcLcLEdge.tagnum = -1 ;
  G__JPetSignalDictLN_vectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgR.tagnum = -1 ;
  G__JPetSignalDictLN_reverse_iteratorlEvectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableJPetSignalDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_JPetSigCh);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_maplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_vectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_reverse_iteratorlEvectorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRcOallocatorlEmaplEJPetSigChcLcLEdgeTypecOfloatcOlesslEJPetSigChcLcLEdgeTypegRcOallocatorlEpairlEconstsPJPetSigChcLcLEdgeTypecOfloatgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_History),sizeof(History),-1,28928,(char*)NULL,G__setup_memvarHistory,G__setup_memfuncHistory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_ExtendedThreshold),sizeof(ExtendedThreshold),-1,33024,(char*)NULL,G__setup_memvarExtendedThreshold,G__setup_memfuncExtendedThreshold);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_JPetSignal),sizeof(JPetSignal),-1,324864,(char*)NULL,G__setup_memvarJPetSignal,G__setup_memfuncJPetSignal);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_JPetSignalcLcLEdge);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_vectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgR);
   G__get_linked_tagnum_fwd(&G__JPetSignalDictLN_reverse_iteratorlEvectorlEExtendedThresholdcOallocatorlEExtendedThresholdgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupJPetSignalDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupJPetSignalDict()");
  G__set_cpp_environmentJPetSignalDict();
  G__cpp_setup_tagtableJPetSignalDict();

  G__cpp_setup_inheritanceJPetSignalDict();

  G__cpp_setup_typetableJPetSignalDict();

  G__cpp_setup_memvarJPetSignalDict();

  G__cpp_setup_memfuncJPetSignalDict();
  G__cpp_setup_globalJPetSignalDict();
  G__cpp_setup_funcJPetSignalDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncJPetSignalDict();
  return;
}
class G__cpp_setup_initJPetSignalDict {
  public:
    G__cpp_setup_initJPetSignalDict() { G__add_setup_func("JPetSignalDict",(G__incsetup)(&G__cpp_setupJPetSignalDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initJPetSignalDict() { G__remove_setup_func("JPetSignalDict"); }
};
G__cpp_setup_initJPetSignalDict G__cpp_setup_initializerJPetSignalDict;

