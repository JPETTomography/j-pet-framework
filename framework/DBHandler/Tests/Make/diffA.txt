diff --git a/framework/DBHandler/HeaderFiles/ParamServer.h b/framework/DBHandler/HeaderFiles/ParamServer.h
index a4900a9..d2f380d 100644
--- a/framework/DBHandler/HeaderFiles/ParamServer.h
+++ b/framework/DBHandler/HeaderFiles/ParamServer.h
@@ -26,7 +26,7 @@ namespace SERVER
 class ParamServer
 {
 public:
-  ParamServer(void);
+  ParamServer(int p_run_id = -1);
   ParamServer(SERVICES::DBHandler &p_dbHandlerInstance);  // for the purposes of a test
   ParamServer(const ParamServer &p_paramServer) = delete;             // do przemyslenia!
   ParamServer& operator=(const ParamServer &p_paramServer) = delete;  // do przemyslenia!
diff --git a/framework/DBHandler/HeaderFiles/TOMBInputMap.h b/framework/DBHandler/HeaderFiles/TOMBInputMap.h
index 6e7d54a..877a090 100644
--- a/framework/DBHandler/HeaderFiles/TOMBInputMap.h
+++ b/framework/DBHandler/HeaderFiles/TOMBInputMap.h
@@ -25,6 +25,8 @@ public:
   virtual void showMap(void) const;
   virtual boost::optional<TOMB_INPUT_MAP_VALUE_TYPE > valueFromMap(TOMB_INPUT_MAP_KEY_TYPE p_key);
   virtual void saveMapToFile(std::string p_fileName);
+
+  friend class ParamData;
 };
 
 } // namespace DATA
diff --git a/framework/DBHandler/Make/makefile b/framework/DBHandler/Make/makefile
index 409f076..c0a7b96 100644
--- a/framework/DBHandler/Make/makefile
+++ b/framework/DBHandler/Make/makefile
@@ -9,7 +9,7 @@ LDFLAGS=
 HDR_DIR = ../HeaderFiles
 SRC_DIR = ../SourceFiles
 HPP_FILES=SerializableMap
-CPP_FILES=Functions RunData DBHandler PhotoMultiplierMap RunDataMap TRBThresholdMap PhotoMultiplierIdMap TOMBInputMap PassedInformationMap ParamServer Main
+CPP_FILES=Functions RunData DBHandler PhotoMultiplierMap RunDataMap TRBThresholdMap PhotoMultiplierIdMap TOMBInputMap PassedInformationMap ParamServer ParamData Main
 HPP_MODULES=$(foreach dir, $(HPP_FILES), $(HDR_DIR)/$(dir).hpp)
 CPP_MODULES=$(foreach dir, $(CPP_FILES), $(SRC_DIR)/$(dir).cpp)
 EXEC=dbhandler
@@ -29,5 +29,5 @@ clean:
 ###################
 # Old makefile
 #all:
-#	g++ ../SourceFiles/RunData.cpp ../SourceFiles/DBHandler.cpp ../SourceFiles/ParamServer.cpp ../SourceFiles/Functions.cpp ../SourceFiles/Main.cpp -I/usr/local/include/ -std=c++0x -lconfig++ -Wall -lpqxx -lpq -o main && ./main
+#	g++ ../SourceFiles/RunData.cpp ../SourceFiles/DBHandler.cpp ../SourceFiles/ParamServer.cpp ../SourceFiles/ParamData.cpp ../SourceFiles/Functions.cpp ../SourceFiles/Main.cpp -I/usr/local/include/ -std=c++0x -lconfig++ -Wall -lpqxx -lpq -o main && ./main
 ###################
diff --git a/framework/DBHandler/SourceFiles/Main.cpp b/framework/DBHandler/SourceFiles/Main.cpp
index 737a49f..e1c3a99 100644
--- a/framework/DBHandler/SourceFiles/Main.cpp
+++ b/framework/DBHandler/SourceFiles/Main.cpp
@@ -5,12 +5,14 @@
 //#include "../HeaderFiles/DBHandler.h"
 #include "../HeaderFiles/ParamServer.h"
 //#include "../HeaderFiles/Functions.h"
+#include "../HeaderFiles/ParamData.h"
+#include "../HeaderFiles/TOMBInputMap.h"
 
 using namespace std;
 
 
 int main(int argc, char* argv[])
-{  
+{
   cout << "We are in main - working." << endl;
 
   DB::SERVER::ParamServer *l_paramServer = new DB::SERVER::ParamServer();
@@ -39,6 +41,22 @@ int main(int argc, char* argv[])
   l_paramServer->passedInformation_Map().fillMap(1);
   l_paramServer->passedInformation_Map().showMap();
 
+  /********************************************************/
+  DB::DATA::ParamData *l_paramData = new DB::DATA::ParamData(*l_paramServer);
+  std::pair<DB::DATA::TOMB_INPUT_MAP_KEY_TYPE, DB::DATA::TOMB_INPUT_MAP_VALUE_TYPE > l_firstElementFromTOMBInputMap = *l_paramServer->TOMBInput_Map().firstElement();
+  std::cout << "\n TOMBInputIdFromTOMBInputMap = " << l_paramData->getTOMBInputIdFromTOMBInputMap(l_firstElementFromTOMBInputMap.first) << std::endl;
+  DB::DATA::TOMB_INPUT_MAP_KEY_TYPE l_TRBIdAndTRBoutputIdFromTOMBInputMap = *l_paramData->getTRBIdAndTRBoutputIdFromTOMBInputMap(l_firstElementFromTOMBInputMap.second);
+  //DB::DATA::TOMB_INPUT_MAP_KEY_TYPE l_TRBIdAndTRBoutputIdFromTOMBInputMap = *l_paramData->getTRBIdAndTRBoutputIdFromTOMBInputMap(4);
+  std::cout << "\n l_TRBIdAndTRBoutputIdFromTOMBInputMap.first = " << l_TRBIdAndTRBoutputIdFromTOMBInputMap.first << std::endl;
+  std::cout << "\n l_TRBIdAndTRBoutputIdFromTOMBInputMap.second = " << l_TRBIdAndTRBoutputIdFromTOMBInputMap.second << std::endl;
+  std::cout << "\n TRBIdFromTOMBInputMap = " << l_paramData->getTRBIdFromTOMBInputMap(l_firstElementFromTOMBInputMap.second) << std::endl;
+  std::cout << "\n TRBOutputIdFromTOMBInputMap = " << l_paramData->getTRBOutputIdFromTOMBInputMap(l_firstElementFromTOMBInputMap.second) << std::endl;
+  delete l_paramData;
+  /********************************************************/
+
+  //std::pair<int, int> l_pair(3,4);
+  //std::cout << l_pair << std::endl;
+
   delete l_paramServer;
 
   return (EXIT_SUCCESS);
diff --git a/framework/DBHandler/SourceFiles/ParamServer.cpp b/framework/DBHandler/SourceFiles/ParamServer.cpp
index 2ed83b0..58c186a 100644
--- a/framework/DBHandler/SourceFiles/ParamServer.cpp
+++ b/framework/DBHandler/SourceFiles/ParamServer.cpp
@@ -11,7 +11,7 @@ namespace DB
 namespace SERVER
 {
 
-ParamServer::ParamServer() :
+ParamServer::ParamServer(int p_run_id) :
                             m_dbHandlerInstance(SERVICES::DBHandler::getInstance()),
                             m_photoMultiplierMap(SERVICES::DBHandler::getInstance()),
                             m_runDataMap(SERVICES::DBHandler::getInstance()),
@@ -20,6 +20,15 @@ ParamServer::ParamServer() :
                             m_TOMBInputMap(SERVICES::DBHandler::getInstance()),
                             m_passedInformationMap(SERVICES::DBHandler::getInstance())
 {
+  if(p_run_id != -1)
+  {
+    m_photoMultiplierMap.fillMap(p_run_id);
+    m_runDataMap.fillMap();
+    m_TRBThresholdMap.fillMap(p_run_id);
+    m_PhotoMultiplierIdMap.fillMap(p_run_id);
+    m_TOMBInputMap.fillMap(p_run_id);
+    m_passedInformationMap.fillMap(p_run_id);
+  }
 }
 
 ParamServer::ParamServer(SERVICES::DBHandler &p_dbHandlerInstance) :
diff --git a/framework/DBHandler/Tests/Make/makefile b/framework/DBHandler/Tests/Make/makefile
index 2a1b4b7..895bbf3 100644
--- a/framework/DBHandler/Tests/Make/makefile
+++ b/framework/DBHandler/Tests/Make/makefile
@@ -18,6 +18,11 @@ paramServerTest:
 paramServerTestLogs:
 	g++ ../../HeaderFiles/SerializableMap.hpp ../../SourceFiles/RunData.cpp ../../SourceFiles/PhotoMultiplierMap.cpp  ../../SourceFiles/RunDataMap.cpp ../../SourceFiles/TRBThresholdMap.cpp ../../SourceFiles/PhotoMultiplierIdMap.cpp ../../SourceFiles/TOMBInputMap.cpp ../../SourceFiles/PassedInformationMap.cpp ../../SourceFiles/Functions.cpp ../../SourceFiles/DBHandler.cpp ../../SourceFiles/ParamServer.cpp ../ParamServerTestSuite.cpp -std=c++0x -lconfig++ -Wall -lpqxx -lpq -o main && ./main --log_level=test_suite
 	
+paramDataTest:
+	g++ ../../HeaderFiles/SerializableMap.hpp ../../SourceFiles/RunData.cpp ../../SourceFiles/PhotoMultiplierMap.cpp ../../SourceFiles/RunDataMap.cpp ../../SourceFiles/TRBThresholdMap.cpp ../../SourceFiles/PhotoMultiplierIdMap.cpp ../../SourceFiles/TOMBInputMap.cpp ../../SourceFiles/PassedInformationMap.cpp ../../SourceFiles/Functions.cpp ../../SourceFiles/DBHandler.cpp ../../SourceFiles/ParamServer.cpp ../../SourceFiles/ParamData.cpp ../ParamDataTestSuite.cpp -std=c++0x -lconfig++ -Wall -lpqxx -lpq -o main && ./main
+paramDataTestLogs:
+	g++ ../../HeaderFiles/SerializableMap.hpp ../../SourceFiles/RunData.cpp ../../SourceFiles/PhotoMultiplierMap.cpp  ../../SourceFiles/RunDataMap.cpp ../../SourceFiles/TRBThresholdMap.cpp ../../SourceFiles/PhotoMultiplierIdMap.cpp ../../SourceFiles/TOMBInputMap.cpp ../../SourceFiles/PassedInformationMap.cpp ../../SourceFiles/Functions.cpp ../../SourceFiles/DBHandler.cpp ../../SourceFiles/ParamServer.cpp ../../SourceFiles/ParamData.cpp ../ParamDataTestSuite.cpp -std=c++0x -lconfig++ -Wall -lpqxx -lpq -o main && ./main --log_level=test_suite
+	
 functionsTest:
 	g++ ../../SourceFiles/Functions.cpp ../FunctionsTestSuite.cpp -std=c++0x -lconfig++ -Wall -lpqxx -lpq -o main && ./main
 functionsTestLogs:
@@ -49,7 +54,7 @@ passedInformationMapTest:
 
 ###################
 runAllTests:
-	make dbHandlerTest paramServerTest functionsTest runDataTest photoMultiplierMapTest runDataMapTest TRBThresholdMapTest photoMultiplierIdMapTest TOMBInputMapTest passedInformationMapTest
+	make dbHandlerTest paramServerTest paramDataTest functionsTest runDataTest photoMultiplierMapTest runDataMapTest TRBThresholdMapTest photoMultiplierIdMapTest TOMBInputMapTest passedInformationMapTest
 ###################
 clean:
 	rm -f *.cpp~ && rm -f *~ && rm -f main
diff --git a/framework/DBHandler/Tests/ParamServerTestSuite.cpp b/framework/DBHandler/Tests/ParamServerTestSuite.cpp
index 1b34db8..8c45f87 100644
--- a/framework/DBHandler/Tests/ParamServerTestSuite.cpp
+++ b/framework/DBHandler/Tests/ParamServerTestSuite.cpp
@@ -84,6 +84,31 @@ BOOST_FIXTURE_TEST_CASE(runInformationTest, ParamServerTestSuite)
   }
 }
 
+BOOST_FIXTURE_TEST_CASE(paramServerConstructorWithRunIdTest, ParamServerTestSuite)
+{
+#if SHOW_DEBUG
+  std::cout << "TEST = " << boost::unit_test::framework::current_test_case().p_name << std::endl;
+#endif
+
+  std::string l_sqlQuerry = "SELECT * FROM runDataFunction();";
+  pqxx::result l_runDbResults = m_dbHandlerInstance.querry(l_sqlQuerry);
+  size_t l_sqlResultsSize = l_runDbResults.size();
+
+  if(l_sqlResultsSize)
+  {
+    pqxx::result::const_iterator row = l_runDbResults.begin();
+    int l_runId = row["run_id"].as<int>();
+
+    DB::SERVER::ParamServer l_paramServer(l_runId);
+    BOOST_CHECK(l_paramServer.photoMultiplier_Map().empty() == false);
+    BOOST_CHECK(l_paramServer.runData_Map().empty() == false);
+    BOOST_CHECK(l_paramServer.TRBThreshold_Map().empty() == false);
+    BOOST_CHECK(l_paramServer.photoMultiplierId_Map().empty() == false);
+    BOOST_CHECK(l_paramServer.TOMBInput_Map().empty() == false);
+    BOOST_CHECK(l_paramServer.passedInformation_Map().empty() == false);
+  }
+}
+
 BOOST_AUTO_TEST_SUITE_END()
 
 } // namespace TEST
